// Generated by Illuminated Cloud on Tue Feb 14 12:00:53 IST 2017. Do not edit.

global class /*ConnectApi.*/ContentHub 
{
    global static ConnectApi.RepositoryFolderItem addRepositoryItem(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData)
    {
    }

    global static ConnectApi.RepositoryFolderItem addRepositoryItem(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file)
    {
    }

    global static ConnectApi.RepositoryFolderItem addRepositoryItem(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData)
    {
    }

    global static ConnectApi.RepositoryFolderItem addRepositoryItem(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file)
    {
    }

    global Object clone()
    {
    }

    global static void deleteRepositoryFile(String communityId, String repositoryId, String repositoryFileId)
    {
    }

    global static void deleteRepositoryFile(String repositoryId, String repositoryFileId)
    {
    }

    global static void deleteRepositoryFolder(String communityId, String repositoryId, String repositoryFolderId)
    {
    }

    global static void deleteRepositoryFolder(String repositoryId, String repositoryFolderId)
    {
    }

    global static ConnectApi.ContentHubAllowedItemTypeCollection getAllowedItemTypes(String repositoryId, String repositoryFolderId)
    {
    }

    global static ConnectApi.ContentHubAllowedItemTypeCollection getAllowedItemTypes(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemType filter)
    {
    }

    global static ConnectApi.ContentHubAllowedItemTypeCollection getAllowedItemTypes(String communityId, String repositoryId, String repositoryFolderId)
    {
    }

    global static ConnectApi.ContentHubAllowedItemTypeCollection getAllowedItemTypes(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemType filter)
    {
    }

    global static ConnectApi.FilePreview getFilePreview(String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType)
    {
    }

    global static ConnectApi.FilePreview getFilePreview(String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType, Integer startPageNumber, Integer endPageNumber)
    {
    }

    global static ConnectApi.FilePreview getFilePreview(String communityId, String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType)
    {
    }

    global static ConnectApi.FilePreview getFilePreview(String communityId, String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType, Integer startPageNumber, Integer endPageNumber)
    {
    }

    global static ConnectApi.ContentHubItemTypeDetail getItemType(String repositoryId, String repositoryItemTypeId)
    {
    }

    global static ConnectApi.ContentHubItemTypeDetail getItemType(String communityId, String repositoryId, String repositoryItemTypeId)
    {
    }

    global static ConnectApi.FilePreviewCollection getPreviews(String repositoryId, String repositoryFileId)
    {
    }

    global static ConnectApi.FilePreviewCollection getPreviews(String communityId, String repositoryId, String repositoryFileId)
    {
    }

    global static ConnectApi.ContentHubRepositoryCollection getRepositories()
    {
    }

    global static ConnectApi.ContentHubRepositoryCollection getRepositories(Integer pageParam, Integer pageSize)
    {
    }

    global static ConnectApi.ContentHubRepositoryCollection getRepositories(String communityId)
    {
    }

    global static ConnectApi.ContentHubRepositoryCollection getRepositories(String communityId, Integer pageParam, Integer pageSize)
    {
    }

    global static ConnectApi.ContentHubRepository getRepository(String repositoryId)
    {
    }

    global static ConnectApi.ContentHubRepository getRepository(String communityId, String repositoryId)
    {
    }

    global static ConnectApi.RepositoryFileDetail getRepositoryFile(String repositoryId, String repositoryFileId, Boolean includeExternalFilePermissionsInfo)
    {
    }

    global static ConnectApi.RepositoryFileDetail getRepositoryFile(String repositoryId, String repositoryFileId)
    {
    }

    global static ConnectApi.RepositoryFileDetail getRepositoryFile(String communityId, String repositoryId, String repositoryFileId, Boolean includeExternalFilePermissionsInfo)
    {
    }

    global static ConnectApi.RepositoryFileDetail getRepositoryFile(String communityId, String repositoryId, String repositoryFileId)
    {
    }

    global static ConnectApi.RepositoryFolderDetail getRepositoryFolder(String repositoryId, String repositoryFolderId)
    {
    }

    global static ConnectApi.RepositoryFolderDetail getRepositoryFolder(String communityId, String repositoryId, String repositoryFolderId)
    {
    }

    global static ConnectApi.RepositoryFolderItemsCollection getRepositoryFolderItems(String repositoryId, String repositoryFolderId, Integer pageParam, Integer pageSize)
    {
    }

    global static ConnectApi.RepositoryFolderItemsCollection getRepositoryFolderItems(String repositoryId, String repositoryFolderId)
    {
    }

    global static ConnectApi.RepositoryFolderItemsCollection getRepositoryFolderItems(String communityId, String repositoryId, String repositoryFolderId, Integer pageParam, Integer pageSize)
    {
    }

    global static ConnectApi.RepositoryFolderItemsCollection getRepositoryFolderItems(String communityId, String repositoryId, String repositoryFolderId)
    {
    }

    global static ConnectApi.RepositoryFileDetail updateRepositoryFile(String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData)
    {
    }

    global static ConnectApi.RepositoryFileDetail updateRepositoryFile(String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file)
    {
    }

    global static ConnectApi.RepositoryFileDetail updateRepositoryFile(String communityId, String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData)
    {
    }

    global static ConnectApi.RepositoryFileDetail updateRepositoryFile(String communityId, String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file)
    {
    }
}