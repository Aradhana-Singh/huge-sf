public class BatchPaymentDataConversion implements Database.Batchable<sObject> {

    //TO RUN: execute this line: Database.executeBatch(new BatchPaymentDataConversion() );

    //public final String query;
    Public String query;
    Decimal a1 = 1;
    Decimal a2 = 1;
    Decimal a3 = 1;
    Decimal a4 = 1;
    Decimal a5 = 1;
    Decimal a6 = 1;
    Decimal a7 = 1;
    Decimal a8 = 1;
    Decimal a9 = 1;
    Decimal a10 = 1;
    Decimal a11 = 1;
    Decimal a12 = 1;
    Decimal a13 = 1;
    Decimal a14 = 1;
    Decimal a15 = 1;
    Decimal a16 = 1;
    Decimal a17 = 1;
    Decimal a18 = 1;
    Decimal a19 = 1;
    Decimal a20 = 1;
    Decimal a21 = 1;
    Decimal a22 = 1;
    Decimal a23 = 1;
    Decimal a24 = 1;
    Decimal a25 = 1;
    Decimal a26 = 1;
    Decimal a27 = 1;
    Decimal a28 = 1;
    Decimal a29 = 1;
    Decimal a30 = 1;
    Decimal a31 = 1;
    Decimal a32 = 1;
    Decimal a33 = 1;
    Decimal a34 = 1;
    Decimal a35 = 1;
    Decimal a36 = 1;
    Decimal a37 = 1;
    Decimal a38 = 1;
    Decimal a39 = 1;
    Decimal a40 = 1;
    Decimal a41 = 1;
    Decimal a42 = 1;
    Decimal a43 = 1;
    Decimal a44 = 1;
    Decimal a45 = 1;
    Decimal a46 = 1;
    Decimal a47 = 1;
    Decimal a48 = 1;
    Decimal a49 = 1;
    Decimal a50 = 1;
    Decimal a51 = 1;
    Decimal a52 = 1;
    Decimal a53 = 1;
    Decimal a54 = 1;
    Decimal a55 = 1;
    Decimal a56 = 1;
    Decimal a57 = 1;
    Decimal a58 = 1;
    Decimal a59 = 1;
    Decimal a60 = 1;
    Decimal a61 = 1;
    Decimal a62 = 1;
    Decimal a63 = 1;
    Decimal a64 = 1;
    Decimal a65 = 1;
    Decimal a66 = 1;
    Decimal a67 = 1;
    Decimal a68 = 1;
    Decimal a69 = 1;
    Decimal a70 = 1;
    Decimal a71 = 1;
    Decimal a72 = 1;
    Decimal a73 = 1;
    Decimal a74 = 1;
    Decimal a75 = 1;
    Decimal a76 = 1;
    Decimal a77 = 1;
    Decimal a78 = 1;
    Decimal a79 = 1;
    Decimal a80 = 1;
    Decimal a81 = 1;
    Decimal a82 = 1;
    Decimal a83 = 1;
    Decimal a84 = 1;
    Decimal a85 = 1;
    Decimal a86 = 1;
    Decimal a87 = 1;
    Decimal a88 = 1;
    Decimal a89 = 1;
    Decimal a90 = 1;
    Decimal a91 = 1;
    Decimal a92 = 1;
    Decimal a93 = 1;
    Decimal a94 = 1;
    Decimal a95 = 1;
    Decimal a96 = 1;
    Decimal a97 = 1;
    Decimal a98 = 1;
    Decimal a99 = 1;
    Decimal a100 = 1;
    Decimal a101 = 1;
    Decimal a102 = 1;
    Decimal a103 = 1;
    Decimal a104 = 1;
    Decimal a105 = 1;
    Decimal a106 = 1;
    Decimal a107 = 1;
    Decimal a108 = 1;
    Decimal a109 = 1;
    Decimal a110 = 1;
    Decimal a111 = 1;
    Decimal a112 = 1;
    Decimal a113 = 1;
    Decimal a114 = 1;
    Decimal a115 = 1;
    Decimal a116 = 1;
    Decimal a117 = 1;
    Decimal a118 = 1;
    Decimal a119 = 1;
    Decimal a120 = 1;
    Decimal a121 = 1;
    Decimal a122 = 1;
    Decimal a123 = 1;
    Decimal a124 = 1;
    Decimal a125 = 1;
    Decimal a126 = 1;
    Decimal a127 = 1;
    Decimal a128 = 1;
    Decimal a129 = 1;
    Decimal a130 = 1;
    Decimal a131 = 1;
    Decimal a132 = 1;
    Decimal a133 = 1;
    Decimal a134 = 1;
    Decimal a135 = 1;
    Decimal a136 = 1;
    Decimal a137 = 1;
    Decimal a138 = 1;
    Decimal a139 = 1;
    Decimal a140 = 1;
    Decimal a141 = 1;
    Decimal a142 = 1;
    Decimal a143 = 1;
    Decimal a144 = 1;
    Decimal a145 = 1;
    Decimal a146 = 1;
    Decimal a147 = 1;
    Decimal a148 = 1;
    Decimal a149 = 1;
    Decimal a150 = 1;
    Decimal a151 = 1;
    Decimal a152 = 1;
    Decimal a153 = 1;
    Decimal a154 = 1;
    Decimal a155 = 1;
    Decimal a156 = 1;
    Decimal a157 = 1;
    Decimal a158 = 1;
    Decimal a159 = 1;
    Decimal a160 = 1;
    Decimal a161 = 1;
    Decimal a162 = 1;
    Decimal a163 = 1;
    Decimal a164 = 1;
    Decimal a165 = 1;
    Decimal a166 = 1;
    Decimal a167 = 1;
    Decimal a168 = 1;
    Decimal a169 = 1;
    Decimal a170 = 1;
    Decimal a171 = 1;
    Decimal a172 = 1;
    Decimal a173 = 1;
    Decimal a174 = 1;
    Decimal a175 = 1;
    Decimal a176 = 1;
    Decimal a177 = 1;
    Decimal a178 = 1;
    Decimal a179 = 1;
    Decimal a180 = 1;
    Decimal a181 = 1;
    Decimal a182 = 1;
    Decimal a183 = 1;
    Decimal a184 = 1;
    Decimal a185 = 1;
    Decimal a186 = 1;
    Decimal a187 = 1;
    Decimal a188 = 1;
    Decimal a189 = 1;
    Decimal a190 = 1;
    Decimal a191 = 1;
    Decimal a192 = 1;
    Decimal a193 = 1;
    Decimal a194 = 1;
    Decimal a195 = 1;
    Decimal a196 = 1;
    Decimal a197 = 1;
    Decimal a198 = 1;
    Decimal a199 = 1;
    Decimal a200 = 1;
    Decimal a201 = 1;
    Decimal a202 = 1;
    Decimal a203 = 1;
    Decimal a204 = 1;
    Decimal a205 = 1;
    Decimal a206 = 1;
    Decimal a207 = 1;
    Decimal a208 = 1;
    Decimal a209 = 1;
    Decimal a210 = 1;
    Decimal a211 = 1;
    Decimal a212 = 1;
    Decimal a213 = 1;
    Decimal a214 = 1;
    Decimal a215 = 1;
    Decimal a216 = 1;
    Decimal a217 = 1;
    Decimal a218 = 1;
    Decimal a219 = 1;
    Decimal a220 = 1;
    Decimal a221 = 1;
    Decimal a222 = 1;
    Decimal a223 = 1;
    Decimal a224 = 1;
    Decimal a225 = 1;
    Decimal a226 = 1;
    Decimal a227 = 1;
    Decimal a228 = 1;
    Decimal a229 = 1;
    Decimal a230 = 1;
    Decimal a231 = 1;
    Decimal a232 = 1;
    Decimal a233 = 1;
    Decimal a234 = 1;
    Decimal a235 = 1;
    Decimal a236 = 1;
    Decimal a237 = 1;
    Decimal a238 = 1;
    Decimal a239 = 1;
    Decimal a240 = 1;
    Decimal a241 = 1;
    Decimal a242 = 1;
    Decimal a243 = 1;
    Decimal a244 = 1;
    Decimal a245 = 1;
    Decimal a246 = 1;
    Decimal a247 = 1;
    Decimal a248 = 1;
    Decimal a249 = 1;
    Decimal a250 = 1;
    Decimal a251 = 1;
    Decimal a252 = 1;
    Decimal a253 = 1;
    Decimal a254 = 1;
    Decimal a255 = 1;
    Decimal a256 = 1;
    Decimal a257 = 1;
    Decimal a258 = 1;
    Decimal a259 = 1;
    Decimal a260 = 1;
    Decimal a261 = 1;
    Decimal a262 = 1;
    Decimal a263 = 1;
    Decimal a264 = 1;
    Decimal a265 = 1;
    Decimal a266 = 1;
    Decimal a267 = 1;
    Decimal a268 = 1;
    Decimal a269 = 1;
    Decimal a270 = 1;
    Decimal a271 = 1;
    Decimal a272 = 1;
    Decimal a273 = 1;
    Decimal a274 = 1;
    Decimal a275 = 1;
    Decimal a276 = 1;
    Decimal a277 = 1;
    Decimal a278 = 1;
    Decimal a279 = 1;
    Decimal a280 = 1;
    Decimal a281 = 1;
    Decimal a282 = 1;
    Decimal a283 = 1;
    Decimal a284 = 1;
    Decimal a285 = 1;
    Decimal a286 = 1;
    Decimal a287 = 1;
    Decimal a288 = 1;
    Decimal a289 = 1;
    Decimal a290 = 1;
    Decimal a291 = 1;
    Decimal a292 = 1;
    Decimal a293 = 1;
    Decimal a294 = 1;
    Decimal a295 = 1;
    Decimal a296 = 1;
    Decimal a297 = 1;
    Decimal a298 = 1;
    Decimal a299 = 1;
    Decimal a300 = 1;
    Decimal a301 = 1;
    Decimal a302 = 1;
    Decimal a303 = 1;
    Decimal a304 = 1;
    Decimal a305 = 1;
    Decimal a306 = 1;
    Decimal a307 = 1;
    Decimal a308 = 1;
    Decimal a309 = 1;
    Decimal a310 = 1;
    Decimal a311 = 1;
    Decimal a312 = 1;
    Decimal a313 = 1;
    Decimal a314 = 1;
    Decimal a315 = 1;
    Decimal a316 = 1;
    Decimal a317 = 1;
    Decimal a318 = 1;
    Decimal a319 = 1;
    Decimal a320 = 1;
    Decimal a321 = 1;
    Decimal a322 = 1;
    Decimal a323 = 1;
    Decimal a324 = 1;
    Decimal a325 = 1;
    Decimal a326 = 1;
    Decimal a327 = 1;
    Decimal a328 = 1;
    Decimal a329 = 1;
    Decimal a330 = 1;
    Decimal a331 = 1;
    Decimal a332 = 1;
    Decimal a333 = 1;
    Decimal a334 = 1;
    Decimal a335 = 1;
    Decimal a336 = 1;
    Decimal a337 = 1;
    Decimal a338 = 1;
    Decimal a339 = 1;
    Decimal a340 = 1;
    Decimal a341 = 1;
    Decimal a342 = 1;
    Decimal a343 = 1;
    Decimal a344 = 1;
    Decimal a345 = 1;
    Decimal a346 = 1;
    Decimal a347 = 1;
    Decimal a348 = 1;
    Decimal a349 = 1;
    Decimal a350 = 1;
    Decimal a351 = 1;
    Decimal a352 = 1;
    Decimal a353 = 1;
    Decimal a354 = 1;
    Decimal a355 = 1;
    Decimal a356 = 1;
    Decimal a357 = 1;
    Decimal a358 = 1;
    Decimal a359 = 1;
    Decimal a360 = 1;
    Decimal a361 = 1;
    Decimal a362 = 1;
    Decimal a363 = 1;
    Decimal a364 = 1;
    Decimal a365 = 1;
    Decimal a366 = 1;
    Decimal a367 = 1;
    Decimal a368 = 1;
    Decimal a369 = 1;
    Decimal a370 = 1;
    Decimal a371 = 1;
    Decimal a372 = 1;
    Decimal a373 = 1;
    Decimal a374 = 1;
    Decimal a375 = 1;
    Decimal a376 = 1;
    Decimal a377 = 1;
    Decimal a378 = 1;
    Decimal a379 = 1;
    Decimal a380 = 1;
    Decimal a381 = 1;
    Decimal a382 = 1;
    Decimal a383 = 1;
    Decimal a384 = 1;
    Decimal a385 = 1;
    Decimal a386 = 1;
    Decimal a387 = 1;
    Decimal a388 = 1;
    Decimal a389 = 1;
    Decimal a390 = 1;
    Decimal a391 = 1;
    Decimal a392 = 1;
    Decimal a393 = 1;
    Decimal a394 = 1;
    Decimal a395 = 1;
    Decimal a396 = 1;
    Decimal a397 = 1;
    Decimal a398 = 1;
    Decimal a399 = 1;
    Decimal a400 = 1;
    Decimal a401 = 1;
    Decimal a402 = 1;
    Decimal a403 = 1;
    Decimal a404 = 1;
    Decimal a405 = 1;
    Decimal a406 = 1;
    Decimal a407 = 1;
    Decimal a408 = 1;
    Decimal a409 = 1;
    Decimal a410 = 1;
    Decimal a411 = 1;
    Decimal a412 = 1;
    Decimal a413 = 1;
    Decimal a414 = 1;
    Decimal a415 = 1;
    Decimal a416 = 1;
    Decimal a417 = 1;
    Decimal a418 = 1;
    Decimal a419 = 1;
    Decimal a420 = 1;
    Decimal a421 = 1;
    Decimal a422 = 1;
    Decimal a423 = 1;
    Decimal a424 = 1;
    Decimal a425 = 1;
    Decimal a426 = 1;
    Decimal a427 = 1;
    Decimal a428 = 1;
    Decimal a429 = 1;
    Decimal a430 = 1;
    Decimal a431 = 1;
    Decimal a432 = 1;
    Decimal a433 = 1;
    Decimal a434 = 1;
    Decimal a435 = 1;
    Decimal a436 = 1;
    Decimal a437 = 1;
    Decimal a438 = 1;
    Decimal a439 = 1;
    Decimal a440 = 1;
    Decimal a441 = 1;
    Decimal a442 = 1;
    Decimal a443 = 1;
    Decimal a444 = 1;
    Decimal a445 = 1;
    Decimal a446 = 1;
    Decimal a447 = 1;
    Decimal a448 = 1;
    Decimal a449 = 1;
    Decimal a450 = 1;
    Decimal a451 = 1;
    Decimal a452 = 1;
    Decimal a453 = 1;
    Decimal a454 = 1;
    Decimal a455 = 1;
    Decimal a456 = 1;
    Decimal a457 = 1;
    Decimal a458 = 1;
    Decimal a459 = 1;
    Decimal a460 = 1;
    Decimal a461 = 1;
    Decimal a462 = 1;
    Decimal a463 = 1;
    Decimal a464 = 1;
    Decimal a465 = 1;
    Decimal a466 = 1;
    Decimal a467 = 1;
    Decimal a468 = 1;
    Decimal a469 = 1;
    Decimal a470 = 1;
    Decimal a471 = 1;
    Decimal a472 = 1;
    Decimal a473 = 1;
    Decimal a474 = 1;
    Decimal a475 = 1;
    Decimal a476 = 1;
    Decimal a477 = 1;
    Decimal a478 = 1;
    Decimal a479 = 1;
    Decimal a480 = 1;
    Decimal a481 = 1;
    Decimal a482 = 1;
    Decimal a483 = 1;
    Decimal a484 = 1;
    Decimal a485 = 1;
    Decimal a486 = 1;
    Decimal a487 = 1;
    Decimal a488 = 1;
    Decimal a489 = 1;
    Decimal a490 = 1;
    Decimal a491 = 1;
    Decimal a492 = 1;
    Decimal a493 = 1;
    Decimal a494 = 1;
    Decimal a495 = 1;
    Decimal a496 = 1;
    Decimal a497 = 1;
    Decimal a498 = 1;
    Decimal a499 = 1;
    Decimal a500 = 1;
    Decimal a501 = 1;
    Decimal a502 = 1;
    Decimal a503 = 1;
    Decimal a504 = 1;
    Decimal a505 = 1;
    Decimal a506 = 1;
    Decimal a507 = 1;
    Decimal a508 = 1;
    Decimal a509 = 1;
    Decimal a510 = 1;
    Decimal a511 = 1;
    Decimal a512 = 1;
    Decimal a513 = 1;
    Decimal a514 = 1;
    Decimal a515 = 1;
    Decimal a516 = 1;
    Decimal a517 = 1;
    Decimal a518 = 1;
    Decimal a519 = 1;
    Decimal a520 = 1;
    Decimal a521 = 1;
    Decimal a522 = 1;
    Decimal a523 = 1;
    Decimal a524 = 1;
    Decimal a525 = 1;
    Decimal a526 = 1;
    Decimal a527 = 1;
    Decimal a528 = 1;
    Decimal a529 = 1;
    Decimal a530 = 1;
    Decimal a531 = 1;
    Decimal a532 = 1;
    Decimal a533 = 1;
    Decimal a534 = 1;
    Decimal a535 = 1;
    Decimal a536 = 1;
    Decimal a537 = 1;
    Decimal a538 = 1;
    Decimal a539 = 1;
    Decimal a540 = 1;
    Decimal a541 = 1;
    Decimal a542 = 1;
    Decimal a543 = 1;
    Decimal a544 = 1;
    Decimal a545 = 1;
    Decimal a546 = 1;
    Decimal a547 = 1;
    Decimal a548 = 1;
    Decimal a549 = 1;
    Decimal a550 = 1;
    Decimal a551 = 1;
    Decimal a552 = 1;
    Decimal a553 = 1;
    Decimal a554 = 1;
    Decimal a555 = 1;
    Decimal a556 = 1;
    Decimal a557 = 1;
    Decimal a558 = 1;
    Decimal a559 = 1;
    Decimal a560 = 1;
    Decimal a561 = 1;
    Decimal a562 = 1;
    Decimal a563 = 1;
    Decimal a564 = 1;
    Decimal a565 = 1;
    Decimal a566 = 1;
    Decimal a567 = 1;
    Decimal a568 = 1;
    Decimal a569 = 1;
    Decimal a570 = 1;
    Decimal a571 = 1;
    Decimal a572 = 1;
    Decimal a573 = 1;
    Decimal a574 = 1;
    Decimal a575 = 1;
    Decimal a576 = 1;
    Decimal a577 = 1;
    Decimal a578 = 1;
    Decimal a579 = 1;
    Decimal a580 = 1;
    Decimal a581 = 1;
    Decimal a582 = 1;
    Decimal a583 = 1;
    Decimal a584 = 1;
    Decimal a585 = 1;
    Decimal a586 = 1;
    Decimal a587 = 1;
    Decimal a588 = 1;
    Decimal a589 = 1;
    Decimal a590 = 1;
    Decimal a591 = 1;
    Decimal a592 = 1;
    Decimal a593 = 1;
    Decimal a594 = 1;
    Decimal a595 = 1;
    Decimal a596 = 1;
    Decimal a597 = 1;
    Decimal a598 = 1;
    Decimal a599 = 1;
    Decimal a600 = 1;
    Decimal a601 = 1;
    Decimal a602 = 1;
    Decimal a603 = 1;
    Decimal a604 = 1;
    Decimal a605 = 1;
    Decimal a606 = 1;
    Decimal a607 = 1;
    Decimal a608 = 1;
    Decimal a609 = 1;
    Decimal a610 = 1;
    Decimal a611 = 1;
    Decimal a612 = 1;
    Decimal a613 = 1;
    Decimal a614 = 1;
    Decimal a615 = 1;
    Decimal a616 = 1;
    Decimal a617 = 1;
    Decimal a618 = 1;
    Decimal a619 = 1;
    Decimal a620 = 1;
    Decimal a621 = 1;
    Decimal a622 = 1;
    Decimal a623 = 1;
    Decimal a624 = 1;
    Decimal a625 = 1;
    Decimal a626 = 1;
    Decimal a627 = 1;
    Decimal a628 = 1;
    Decimal a629 = 1;
    Decimal a630 = 1;
    Decimal a631 = 1;
    Decimal a632 = 1;
    Decimal a633 = 1;
    Decimal a634 = 1;
    Decimal a635 = 1;
    Decimal a636 = 1;
    Decimal a637 = 1;
    Decimal a638 = 1;
    Decimal a639 = 1;
    Decimal a640 = 1;
    Decimal a641 = 1;
    Decimal a642 = 1;
    Decimal a643 = 1;
    Decimal a644 = 1;
    Decimal a645 = 1;
    Decimal a646 = 1;
    Decimal a647 = 1;
    Decimal a648 = 1;
    Decimal a649 = 1;
    Decimal a650 = 1;
    Decimal a651 = 1;
    Decimal a652 = 1;
    Decimal a653 = 1;
    Decimal a654 = 1;
    Decimal a655 = 1;
    Decimal a656 = 1;
    Decimal a657 = 1;
    Decimal a658 = 1;
    Decimal a659 = 1;
    Decimal a660 = 1;
    Decimal a661 = 1;
    Decimal a662 = 1;
    Decimal a663 = 1;
    Decimal a664 = 1;
    Decimal a665 = 1;
    Decimal a666 = 1;
    Decimal a667 = 1;
    Decimal a668 = 1;
    Decimal a669 = 1;
    Decimal a670 = 1;
    Decimal a671 = 1;
    Decimal a672 = 1;
    Decimal a673 = 1;
    Decimal a674 = 1;
    Decimal a675 = 1;
    Decimal a676 = 1;
    Decimal a677 = 1;
    Decimal a678 = 1;
    Decimal a679 = 1;
    Decimal a680 = 1;
    Decimal a681 = 1;
    Decimal a682 = 1;
    Decimal a683 = 1;
    Decimal a684 = 1;
    Decimal a685 = 1;
    Decimal a686 = 1;
    Decimal a687 = 1;
    Decimal a688 = 1;
    Decimal a689 = 1;
    Decimal a690 = 1;
    Decimal a691 = 1;
    Decimal a692 = 1;
    Decimal a693 = 1;
    Decimal a694 = 1;
    Decimal a695 = 1;
    Decimal a696 = 1;
    Decimal a697 = 1;
    Decimal a698 = 1;
    Decimal a699 = 1;
    Decimal a700 = 1;
    Decimal a701 = 1;
    Decimal a702 = 1;
    Decimal a703 = 1;
    Decimal a704 = 1;
    Decimal a705 = 1;
    Decimal a706 = 1;
    Decimal a707 = 1;
    Decimal a708 = 1;
    Decimal a709 = 1;
    Decimal a710 = 1;
    Decimal a711 = 1;
    Decimal a712 = 1;
    Decimal a713 = 1;
    Decimal a714 = 1;
    Decimal a715 = 1;
    Decimal a716 = 1;
    Decimal a717 = 1;
    Decimal a718 = 1;
    Decimal a719 = 1;
    Decimal a720 = 1;
    Decimal a721 = 1;
    Decimal a722 = 1;
    Decimal a723 = 1;
    Decimal a724 = 1;
    Decimal a725 = 1;
    Decimal a726 = 1;
    Decimal a727 = 1;
    Decimal a728 = 1;
    Decimal a729 = 1;
    Decimal a730 = 1;
    Decimal a731 = 1;
    Decimal a732 = 1;
    Decimal a733 = 1;
    Decimal a734 = 1;
    Decimal a735 = 1;
    Decimal a736 = 1;
    Decimal a737 = 1;
    Decimal a738 = 1;
    Decimal a739 = 1;
    Decimal a740 = 1;
    Decimal a741 = 1;
    Decimal a742 = 1;
    Decimal a743 = 1;
    Decimal a744 = 1;
    Decimal a745 = 1;
    Decimal a746 = 1;
    Decimal a747 = 1;
    Decimal a748 = 1;
    Decimal a749 = 1;
    Decimal a750 = 1;
    Decimal a751 = 1;
    Decimal a752 = 1;
    Decimal a753 = 1;
    Decimal a754 = 1;
    Decimal a755 = 1;
    Decimal a756 = 1;
    Decimal a757 = 1;
    Decimal a758 = 1;
    Decimal a759 = 1;
    Decimal a760 = 1;
    Decimal a761 = 1;
    Decimal a762 = 1;
    Decimal a763 = 1;
    Decimal a764 = 1;
    Decimal a765 = 1;
    Decimal a766 = 1;
    Decimal a767 = 1;
    Decimal a768 = 1;
    Decimal a769 = 1;
    Decimal a770 = 1;
    Decimal a771 = 1;
    Decimal a772 = 1;
    Decimal a773 = 1;
    Decimal a774 = 1;
    Decimal a775 = 1;
    Decimal a776 = 1;
    Decimal a777 = 1;
    Decimal a778 = 1;
    Decimal a779 = 1;
    Decimal a780 = 1;
    Decimal a781 = 1;
    Decimal a782 = 1;
    Decimal a783 = 1;
    Decimal a784 = 1;
    Decimal a785 = 1;
    Decimal a786 = 1;
    Decimal a787 = 1;
    Decimal a788 = 1;
    Decimal a789 = 1;
    Decimal a790 = 1;
    Decimal a791 = 1;
    Decimal a792 = 1;
    Decimal a793 = 1;
    Decimal a794 = 1;
    Decimal a795 = 1;
    Decimal a796 = 1;
    Decimal a797 = 1;
    Decimal a798 = 1;
    Decimal a799 = 1;
    Decimal a800 = 1;
    Decimal a801 = 1;
    Decimal a802 = 1;
    Decimal a803 = 1;
    Decimal a804 = 1;
    Decimal a805 = 1;
    Decimal a806 = 1;
    Decimal a807 = 1;
    Decimal a808 = 1;
    Decimal a809 = 1;
    Decimal a810 = 1;
    Decimal a811 = 1;
    Decimal a812 = 1;
    Decimal a813 = 1;
    Decimal a814 = 1;
    Decimal a815 = 1;
    Decimal a816 = 1;
    Decimal a817 = 1;
    Decimal a818 = 1;
    Decimal a819 = 1;
    Decimal a820 = 1;
    Decimal a821 = 1;
    Decimal a822 = 1;
    Decimal a823 = 1;
    Decimal a824 = 1;
    Decimal a825 = 1;
    Decimal a826 = 1;
    Decimal a827 = 1;
    Decimal a828 = 1;
    Decimal a829 = 1;
    Decimal a830 = 1;
    Decimal a831 = 1;
    Decimal a832 = 1;
    Decimal a833 = 1;
    Decimal a834 = 1;
    Decimal a835 = 1;
    Decimal a836 = 1;
    Decimal a837 = 1;
    Decimal a838 = 1;
    Decimal a839 = 1;
    Decimal a840 = 1;
    Decimal a841 = 1;
    Decimal a842 = 1;
    Decimal a843 = 1;
    Decimal a844 = 1;
    Decimal a845 = 1;
    Decimal a846 = 1;
    Decimal a847 = 1;
    Decimal a848 = 1;
    Decimal a849 = 1;
    Decimal a850 = 1;
    Decimal a851 = 1;
    Decimal a852 = 1;
    Decimal a853 = 1;
    Decimal a854 = 1;
    Decimal a855 = 1;
    Decimal a856 = 1;
    Decimal a857 = 1;
    Decimal a858 = 1;
    Decimal a859 = 1;
    Decimal a860 = 1;
    Decimal a861 = 1;
    Decimal a862 = 1;
    Decimal a863 = 1;
    Decimal a864 = 1;
    Decimal a865 = 1;
    Decimal a866 = 1;
    Decimal a867 = 1;
    Decimal a868 = 1;
    Decimal a869 = 1;
    Decimal a870 = 1;
    Decimal a871 = 1;
    Decimal a872 = 1;
    Decimal a873 = 1;
    Decimal a874 = 1;
    Decimal a875 = 1;
    Decimal a876 = 1;
    Decimal a877 = 1;
    Decimal a878 = 1;
    Decimal a879 = 1;
    Decimal a880 = 1;
    Decimal a881 = 1;
    Decimal a882 = 1;
    Decimal a883 = 1;
    Decimal a884 = 1;
    Decimal a885 = 1;
    Decimal a886 = 1;
    Decimal a887 = 1;
    Decimal a888 = 1;
    Decimal a889 = 1;
    Decimal a890 = 1;
    Decimal a891 = 1;
    Decimal a892 = 1;
    Decimal a893 = 1;
    Decimal a894 = 1;
    Decimal a895 = 1;
    Decimal a896 = 1;
    Decimal a897 = 1;
    Decimal a898 = 1;
    Decimal a899 = 1;
    Decimal a900 = 1;
    Decimal a901 = 1;
    Decimal a902 = 1;
    Decimal a903 = 1;
    Decimal a904 = 1;
    Decimal a905 = 1;
    Decimal a906 = 1;
    Decimal a907 = 1;
    Decimal a908 = 1;
    Decimal a909 = 1;
    Decimal a910 = 1;
    Decimal a911 = 1;
    Decimal a912 = 1;
    Decimal a913 = 1;
    Decimal a914 = 1;
    Decimal a915 = 1;
    Decimal a916 = 1;
    Decimal a917 = 1;
    Decimal a918 = 1;
    Decimal a919 = 1;
    Decimal a920 = 1;
    Decimal a921 = 1;
    Decimal a922 = 1;
    Decimal a923 = 1;
    Decimal a924 = 1;
    Decimal a925 = 1;
    Decimal a926 = 1;
    Decimal a927 = 1;
    Decimal a928 = 1;
    Decimal a929 = 1;
    Decimal a930 = 1;
    Decimal a931 = 1;
    Decimal a932 = 1;
    Decimal a933 = 1;
    Decimal a934 = 1;
    Decimal a935 = 1;
    Decimal a936 = 1;
    Decimal a937 = 1;
    Decimal a938 = 1;
    Decimal a939 = 1;
    Decimal a940 = 1;
    Decimal a941 = 1;
    Decimal a942 = 1;
    Decimal a943 = 1;
    Decimal a944 = 1;
    Decimal a945 = 1;
    Decimal a946 = 1;
    Decimal a947 = 1;
    Decimal a948 = 1;
    Decimal a949 = 1;
    Decimal a950 = 1;
    Decimal a951 = 1;
    Decimal a952 = 1;
    Decimal a953 = 1;
    Decimal a954 = 1;
    Decimal a955 = 1;
    Decimal a956 = 1;
    Decimal a957 = 1;
    Decimal a958 = 1;
    Decimal a959 = 1;
    Decimal a960 = 1;
    Decimal a961 = 1;
    Decimal a962 = 1;
    Decimal a963 = 1;
    Decimal a964 = 1;
    Decimal a965 = 1;
    Decimal a966 = 1;
    Decimal a967 = 1;
    Decimal a968 = 1;
    Decimal a969 = 1;
    Decimal a970 = 1;
    Decimal a971 = 1;
    Decimal a972 = 1;
    Decimal a973 = 1;
    Decimal a974 = 1;
    Decimal a975 = 1;
    Decimal a976 = 1;
    Decimal a977 = 1;
    Decimal a978 = 1;
    Decimal a979 = 1;
    Decimal a980 = 1;
    Decimal a981 = 1;
    Decimal a982 = 1;
    Decimal a983 = 1;
    Decimal a984 = 1;
    Decimal a985 = 1;
    Decimal a986 = 1;
    Decimal a987 = 1;
    Decimal a988 = 1;
    Decimal a989 = 1;
    Decimal a990 = 1;
    Decimal a991 = 1;
    Decimal a992 = 1;
    Decimal a993 = 1;
    Decimal a994 = 1;
    Decimal a995 = 1;
    Decimal a996 = 1;
    Decimal a997 = 1;
    Decimal a998 = 1;
    Decimal a999 = 1;
    Decimal a1000 = 1;
    
    Decimal b1 = 1;
    Decimal b2 = 1;
    Decimal b3 = 1;
    Decimal b4 = 1;
    Decimal b5 = 1;
    Decimal b6 = 1;
    Decimal b7 = 1;
    Decimal b8 = 1;
    Decimal b9 = 1;
    Decimal b10 = 1;
    Decimal b11 = 1;
    Decimal b12 = 1;
    Decimal b13 = 1;
    Decimal b14 = 1;
    Decimal b15 = 1;
    Decimal b16 = 1;
    Decimal b17 = 1;
    Decimal b18 = 1;
    Decimal b19 = 1;
    Decimal b20 = 1;
    Decimal b21 = 1;
    Decimal b22 = 1;
    Decimal b23 = 1;
    Decimal b24 = 1;
    Decimal b25 = 1;
    Decimal b26 = 1;
    Decimal b27 = 1;
    Decimal b28 = 1;
    Decimal b29 = 1;
    Decimal b30 = 1;
    Decimal b31 = 1;
    Decimal b32 = 1;
    Decimal b33 = 1;
    Decimal b34 = 1;
    Decimal b35 = 1;
    Decimal b36 = 1;
    Decimal b37 = 1;
    Decimal b38 = 1;
    Decimal b39 = 1;
    Decimal b40 = 1;
    Decimal b41 = 1;
    Decimal b42 = 1;
    Decimal b43 = 1;
    Decimal b44 = 1;
    Decimal b45 = 1;
    Decimal b46 = 1;
    Decimal b47 = 1;
    Decimal b48 = 1;
    Decimal b49 = 1;
    Decimal b50 = 1;
    Decimal b51 = 1;
    Decimal b52 = 1;
    Decimal b53 = 1;
    Decimal b54 = 1;
    Decimal b55 = 1;
    Decimal b56 = 1;
    Decimal b57 = 1;
    Decimal b58 = 1;
    Decimal b59 = 1;
    Decimal b60 = 1;
    Decimal b61 = 1;
    Decimal b62 = 1;
    Decimal b63 = 1;
    Decimal b64 = 1;
    Decimal b65 = 1;
    Decimal b66 = 1;
    Decimal b67 = 1;
    Decimal b68 = 1;
    Decimal b69 = 1;
    Decimal b70 = 1;
    Decimal b71 = 1;
    Decimal b72 = 1;
    Decimal b73 = 1;
    Decimal b74 = 1;
    Decimal b75 = 1;
    Decimal b76 = 1;
    Decimal b77 = 1;
    Decimal b78 = 1;
    Decimal b79 = 1;
    Decimal b80 = 1;
    Decimal b81 = 1;
    Decimal b82 = 1;
    Decimal b83 = 1;
    Decimal b84 = 1;
    Decimal b85 = 1;
    Decimal b86 = 1;
    Decimal b87 = 1;
    Decimal b88 = 1;
    Decimal b89 = 1;
    Decimal b90 = 1;
    Decimal b91 = 1;
    Decimal b92 = 1;
    Decimal b93 = 1;
    Decimal b94 = 1;
    Decimal b95 = 1;
    Decimal b96 = 1;
    Decimal b97 = 1;
    Decimal b98 = 1;
    Decimal b99 = 1;
    Decimal b100 = 1;
    Decimal b101 = 1;
    Decimal b102 = 1;
    Decimal b103 = 1;
    Decimal b104 = 1;
    Decimal b105 = 1;
    Decimal b106 = 1;
    Decimal b107 = 1;
    Decimal b108 = 1;
    Decimal b109 = 1;
    Decimal b110 = 1;
    Decimal b111 = 1;
    Decimal b112 = 1;
    Decimal b113 = 1;
    Decimal b114 = 1;
    Decimal b115 = 1;
    Decimal b116 = 1;
    Decimal b117 = 1;
    Decimal b118 = 1;
    Decimal b119 = 1;
    Decimal b120 = 1;
    Decimal b121 = 1;
    Decimal b122 = 1;
    Decimal b123 = 1;
    Decimal b124 = 1;
    Decimal b125 = 1;
    Decimal b126 = 1;
    Decimal b127 = 1;
    Decimal b128 = 1;
    Decimal b129 = 1;
    Decimal b130 = 1;
    Decimal b131 = 1;
    Decimal b132 = 1;
    Decimal b133 = 1;
    Decimal b134 = 1;
    Decimal b135 = 1;
    Decimal b136 = 1;
    Decimal b137 = 1;
    Decimal b138 = 1;
    Decimal b139 = 1;
    Decimal b140 = 1;
    Decimal b141 = 1;
    Decimal b142 = 1;
    Decimal b143 = 1;
    Decimal b144 = 1;
    Decimal b145 = 1;
    Decimal b146 = 1;
    Decimal b147 = 1;
    Decimal b148 = 1;
    Decimal b149 = 1;
    Decimal b150 = 1;
    Decimal b151 = 1;
    Decimal b152 = 1;
    Decimal b153 = 1;
    Decimal b154 = 1;
    Decimal b155 = 1;
    Decimal b156 = 1;
    Decimal b157 = 1;
    Decimal b158 = 1;
    Decimal b159 = 1;
    Decimal b160 = 1;
    Decimal b161 = 1;
    Decimal b162 = 1;
    Decimal b163 = 1;
    Decimal b164 = 1;
    Decimal b165 = 1;
    Decimal b166 = 1;
    Decimal b167 = 1;
    Decimal b168 = 1;
    Decimal b169 = 1;
    Decimal b170 = 1;
    Decimal b171 = 1;
    Decimal b172 = 1;
    Decimal b173 = 1;
    Decimal b174 = 1;
    Decimal b175 = 1;
    Decimal b176 = 1;
    Decimal b177 = 1;
    Decimal b178 = 1;
    Decimal b179 = 1;
    Decimal b180 = 1;
    Decimal b181 = 1;
    Decimal b182 = 1;
    Decimal b183 = 1;
    Decimal b184 = 1;
    Decimal b185 = 1;
    Decimal b186 = 1;
    Decimal b187 = 1;
    Decimal b188 = 1;
    Decimal b189 = 1;
    Decimal b190 = 1;
    Decimal b191 = 1;
    Decimal b192 = 1;
    Decimal b193 = 1;
    Decimal b194 = 1;
    Decimal b195 = 1;
    Decimal b196 = 1;
    Decimal b197 = 1;
    Decimal b198 = 1;
    Decimal b199 = 1;
    Decimal b200 = 1;
    Decimal b201 = 1;
    Decimal b202 = 1;
    Decimal b203 = 1;
    Decimal b204 = 1;
    Decimal b205 = 1;
    Decimal b206 = 1;
    Decimal b207 = 1;
    Decimal b208 = 1;
    Decimal b209 = 1;
    Decimal b210 = 1;
    Decimal b211 = 1;
    Decimal b212 = 1;
    Decimal b213 = 1;
    Decimal b214 = 1;
    Decimal b215 = 1;
    Decimal b216 = 1;
    Decimal b217 = 1;
    Decimal b218 = 1;
    Decimal b219 = 1;
    Decimal b220 = 1;
    Decimal b221 = 1;
    Decimal b222 = 1;
    Decimal b223 = 1;
    Decimal b224 = 1;
    Decimal b225 = 1;
    Decimal b226 = 1;
    Decimal b227 = 1;
    Decimal b228 = 1;
    Decimal b229 = 1;
    Decimal b230 = 1;
    Decimal b231 = 1;
    Decimal b232 = 1;
    Decimal b233 = 1;
    Decimal b234 = 1;
    Decimal b235 = 1;
    Decimal b236 = 1;
    Decimal b237 = 1;
    Decimal b238 = 1;
    Decimal b239 = 1;
    Decimal b240 = 1;
    Decimal b241 = 1;
    Decimal b242 = 1;
    Decimal b243 = 1;
    Decimal b244 = 1;
    Decimal b245 = 1;
    Decimal b246 = 1;
    Decimal b247 = 1;
    Decimal b248 = 1;
    Decimal b249 = 1;
    Decimal b250 = 1;
    Decimal b251 = 1;
    Decimal b252 = 1;
    Decimal b253 = 1;
    Decimal b254 = 1;
    Decimal b255 = 1;
    Decimal b256 = 1;
    Decimal b257 = 1;
    Decimal b258 = 1;
    Decimal b259 = 1;
    Decimal b260 = 1;
    Decimal b261 = 1;
    Decimal b262 = 1;
    Decimal b263 = 1;
    Decimal b264 = 1;
    Decimal b265 = 1;
    Decimal b266 = 1;
    Decimal b267 = 1;
    Decimal b268 = 1;
    Decimal b269 = 1;
    Decimal b270 = 1;
    Decimal b271 = 1;
    Decimal b272 = 1;
    Decimal b273 = 1;
    Decimal b274 = 1;
    Decimal b275 = 1;
    Decimal b276 = 1;
    Decimal b277 = 1;
    Decimal b278 = 1;
    Decimal b279 = 1;
    Decimal b280 = 1;
    Decimal b281 = 1;
    Decimal b282 = 1;
    Decimal b283 = 1;
    Decimal b284 = 1;
    Decimal b285 = 1;
    Decimal b286 = 1;
    Decimal b287 = 1;
    Decimal b288 = 1;
    Decimal b289 = 1;
    Decimal b290 = 1;
    Decimal b291 = 1;
    Decimal b292 = 1;
    Decimal b293 = 1;
    Decimal b294 = 1;
    Decimal b295 = 1;
    Decimal b296 = 1;
    Decimal b297 = 1;
    Decimal b298 = 1;
    Decimal b299 = 1;
    Decimal b300 = 1;
    Decimal b301 = 1;
    Decimal b302 = 1;
    Decimal b303 = 1;
    Decimal b304 = 1;
    Decimal b305 = 1;
    Decimal b306 = 1;
    Decimal b307 = 1;
    Decimal b308 = 1;
    Decimal b309 = 1;
    Decimal b310 = 1;
    Decimal b311 = 1;
    Decimal b312 = 1;
    Decimal b313 = 1;
    Decimal b314 = 1;
    Decimal b315 = 1;
    Decimal b316 = 1;
    Decimal b317 = 1;
    Decimal b318 = 1;
    Decimal b319 = 1;
    Decimal b320 = 1;
    Decimal b321 = 1;
    Decimal b322 = 1;
    Decimal b323 = 1;
    Decimal b324 = 1;
    Decimal b325 = 1;
    Decimal b326 = 1;
    Decimal b327 = 1;
    Decimal b328 = 1;
    Decimal b329 = 1;
    Decimal b330 = 1;
    Decimal b331 = 1;
    Decimal b332 = 1;
    Decimal b333 = 1;
    Decimal b334 = 1;
    Decimal b335 = 1;
    Decimal b336 = 1;
    Decimal b337 = 1;
    Decimal b338 = 1;
    Decimal b339 = 1;
    Decimal b340 = 1;
    Decimal b341 = 1;
    Decimal b342 = 1;
    Decimal b343 = 1;
    Decimal b344 = 1;
    Decimal b345 = 1;
    Decimal b346 = 1;
    Decimal b347 = 1;
    Decimal b348 = 1;
    Decimal b349 = 1;
    Decimal b350 = 1;
    Decimal b351 = 1;
    Decimal b352 = 1;
    Decimal b353 = 1;
    Decimal b354 = 1;
    Decimal b355 = 1;
    Decimal b356 = 1;
    Decimal b357 = 1;
    Decimal b358 = 1;
    Decimal b359 = 1;
    Decimal b360 = 1;
    Decimal b361 = 1;
    Decimal b362 = 1;
    Decimal b363 = 1;
    Decimal b364 = 1;
    Decimal b365 = 1;
    Decimal b366 = 1;
    Decimal b367 = 1;
    Decimal b368 = 1;
    Decimal b369 = 1;
    Decimal b370 = 1;
    Decimal b371 = 1;
    Decimal b372 = 1;
    Decimal b373 = 1;
    Decimal b374 = 1;
    Decimal b375 = 1;
    Decimal b376 = 1;
    Decimal b377 = 1;
    Decimal b378 = 1;
    Decimal b379 = 1;
    Decimal b380 = 1;
    Decimal b381 = 1;
    Decimal b382 = 1;
    Decimal b383 = 1;
    Decimal b384 = 1;
    Decimal b385 = 1;
    Decimal b386 = 1;
    Decimal b387 = 1;
    Decimal b388 = 1;
    Decimal b389 = 1;
    Decimal b390 = 1;
    Decimal b391 = 1;
    Decimal b392 = 1;
    Decimal b393 = 1;
    Decimal b394 = 1;
    Decimal b395 = 1;
    Decimal b396 = 1;
    Decimal b397 = 1;
    Decimal b398 = 1;
    Decimal b399 = 1;
    Decimal b400 = 1;
    Decimal b401 = 1;
    Decimal b402 = 1;
    Decimal b403 = 1;
    Decimal b404 = 1;
    Decimal b405 = 1;
    Decimal b406 = 1;
    Decimal b407 = 1;
    Decimal b408 = 1;
    Decimal b409 = 1;
    Decimal b410 = 1;
    Decimal b411 = 1;
    Decimal b412 = 1;
    Decimal b413 = 1;
    Decimal b414 = 1;
    Decimal b415 = 1;
    Decimal b416 = 1;
    Decimal b417 = 1;
    Decimal b418 = 1;
    Decimal b419 = 1;
    Decimal b420 = 1;
    Decimal b421 = 1;
    Decimal b422 = 1;
    Decimal b423 = 1;
    Decimal b424 = 1;
    Decimal b425 = 1;
    Decimal b426 = 1;
    Decimal b427 = 1;
    Decimal b428 = 1;
    Decimal b429 = 1;
    Decimal b430 = 1;
    Decimal b431 = 1;
    Decimal b432 = 1;
    Decimal b433 = 1;
    Decimal b434 = 1;
    Decimal b435 = 1;
    Decimal b436 = 1;
    Decimal b437 = 1;
    Decimal b438 = 1;
    Decimal b439 = 1;
    Decimal b440 = 1;
    Decimal b441 = 1;
    Decimal b442 = 1;
    Decimal b443 = 1;
    Decimal b444 = 1;
    Decimal b445 = 1;
    Decimal b446 = 1;
    Decimal b447 = 1;
    Decimal b448 = 1;
    Decimal b449 = 1;
    Decimal b450 = 1;
    Decimal b451 = 1;
    Decimal b452 = 1;
    Decimal b453 = 1;
    Decimal b454 = 1;
    Decimal b455 = 1;
    Decimal b456 = 1;
    Decimal b457 = 1;
    Decimal b458 = 1;
    Decimal b459 = 1;
    Decimal b460 = 1;
    Decimal b461 = 1;
    Decimal b462 = 1;
    Decimal b463 = 1;
    Decimal b464 = 1;
    Decimal b465 = 1;
    Decimal b466 = 1;
    Decimal b467 = 1;
    Decimal b468 = 1;
    Decimal b469 = 1;
    Decimal b470 = 1;
    Decimal b471 = 1;
    Decimal b472 = 1;
    Decimal b473 = 1;
    Decimal b474 = 1;
    Decimal b475 = 1;
    Decimal b476 = 1;
    Decimal b477 = 1;
    Decimal b478 = 1;
    Decimal b479 = 1;
    Decimal b480 = 1;
    Decimal b481 = 1;
    Decimal b482 = 1;
    Decimal b483 = 1;
    Decimal b484 = 1;
    Decimal b485 = 1;
    Decimal b486 = 1;
    Decimal b487 = 1;
    Decimal b488 = 1;
    Decimal b489 = 1;
    Decimal b490 = 1;
    Decimal b491 = 1;
    Decimal b492 = 1;
    Decimal b493 = 1;
    Decimal b494 = 1;
    Decimal b495 = 1;
    Decimal b496 = 1;
    Decimal b497 = 1;
    Decimal b498 = 1;
    Decimal b499 = 1;
    Decimal b500 = 1;
    Decimal b501 = 1;
    Decimal b502 = 1;
    Decimal b503 = 1;
    Decimal b504 = 1;
    Decimal b505 = 1;
    Decimal b506 = 1;
    Decimal b507 = 1;
    Decimal b508 = 1;
    Decimal b509 = 1;
    Decimal b510 = 1;
    Decimal b511 = 1;
    Decimal b512 = 1;
    Decimal b513 = 1;
    Decimal b514 = 1;
    Decimal b515 = 1;
    Decimal b516 = 1;
    Decimal b517 = 1;
    Decimal b518 = 1;
    Decimal b519 = 1;
    Decimal b520 = 1;
    Decimal b521 = 1;
    Decimal b522 = 1;
    Decimal b523 = 1;
    Decimal b524 = 1;
    Decimal b525 = 1;
    Decimal b526 = 1;
    Decimal b527 = 1;
    Decimal b528 = 1;
    Decimal b529 = 1;
    Decimal b530 = 1;
    Decimal b531 = 1;
    Decimal b532 = 1;
    Decimal b533 = 1;
    Decimal b534 = 1;
    Decimal b535 = 1;
    Decimal b536 = 1;
    Decimal b537 = 1;
    Decimal b538 = 1;
    Decimal b539 = 1;
    Decimal b540 = 1;
    Decimal b541 = 1;
    Decimal b542 = 1;
    Decimal b543 = 1;
    Decimal b544 = 1;
    Decimal b545 = 1;
    Decimal b546 = 1;
    Decimal b547 = 1;
    Decimal b548 = 1;
    Decimal b549 = 1;
    Decimal b550 = 1;
    Decimal b551 = 1;
    Decimal b552 = 1;
    Decimal b553 = 1;
    Decimal b554 = 1;
    Decimal b555 = 1;
    Decimal b556 = 1;
    Decimal b557 = 1;
    Decimal b558 = 1;
    Decimal b559 = 1;
    Decimal b560 = 1;
    Decimal b561 = 1;
    Decimal b562 = 1;
    Decimal b563 = 1;
    Decimal b564 = 1;
    Decimal b565 = 1;
    Decimal b566 = 1;
    Decimal b567 = 1;
    Decimal b568 = 1;
    Decimal b569 = 1;
    Decimal b570 = 1;
    Decimal b571 = 1;
    Decimal b572 = 1;
    Decimal b573 = 1;
    Decimal b574 = 1;
    Decimal b575 = 1;
    Decimal b576 = 1;
    Decimal b577 = 1;
    Decimal b578 = 1;
    Decimal b579 = 1;
    Decimal b580 = 1;
    Decimal b581 = 1;
    Decimal b582 = 1;
    Decimal b583 = 1;
    Decimal b584 = 1;
    Decimal b585 = 1;
    Decimal b586 = 1;
    Decimal b587 = 1;
    Decimal b588 = 1;
    Decimal b589 = 1;
    Decimal b590 = 1;
    Decimal b591 = 1;
    Decimal b592 = 1;
    Decimal b593 = 1;
    Decimal b594 = 1;
    Decimal b595 = 1;
    Decimal b596 = 1;
    Decimal b597 = 1;
    Decimal b598 = 1;
    Decimal b599 = 1;
    Decimal b600 = 1;
    Decimal b601 = 1;
    Decimal b602 = 1;
    Decimal b603 = 1;
    Decimal b604 = 1;
    Decimal b605 = 1;
    Decimal b606 = 1;
    Decimal b607 = 1;
    Decimal b608 = 1;
    Decimal b609 = 1;
    Decimal b610 = 1;
    Decimal b611 = 1;
    Decimal b612 = 1;
    Decimal b613 = 1;
    Decimal b614 = 1;
    Decimal b615 = 1;
    Decimal b616 = 1;
    Decimal b617 = 1;
    Decimal b618 = 1;
    Decimal b619 = 1;
    Decimal b620 = 1;
    Decimal b621 = 1;
    Decimal b622 = 1;
    Decimal b623 = 1;
    Decimal b624 = 1;
    Decimal b625 = 1;
    Decimal b626 = 1;
    Decimal b627 = 1;
    Decimal b628 = 1;
    Decimal b629 = 1;
    Decimal b630 = 1;
    Decimal b631 = 1;
    Decimal b632 = 1;
    Decimal b633 = 1;
    Decimal b634 = 1;
    Decimal b635 = 1;
    Decimal b636 = 1;
    Decimal b637 = 1;
    Decimal b638 = 1;
    Decimal b639 = 1;
    Decimal b640 = 1;
    Decimal b641 = 1;
    Decimal b642 = 1;
    Decimal b643 = 1;
    Decimal b644 = 1;
    Decimal b645 = 1;
    Decimal b646 = 1;
    Decimal b647 = 1;
    Decimal b648 = 1;
    Decimal b649 = 1;
    Decimal b650 = 1;
    Decimal b651 = 1;
    Decimal b652 = 1;
    Decimal b653 = 1;
    Decimal b654 = 1;
    Decimal b655 = 1;
    Decimal b656 = 1;
    Decimal b657 = 1;
    Decimal b658 = 1;
    Decimal b659 = 1;
    Decimal b660 = 1;
    Decimal b661 = 1;
    Decimal b662 = 1;
    Decimal b663 = 1;
    Decimal b664 = 1;
    Decimal b665 = 1;
    Decimal b666 = 1;
    Decimal b667 = 1;
    Decimal b668 = 1;
    Decimal b669 = 1;
    Decimal b670 = 1;
    Decimal b671 = 1;
    Decimal b672 = 1;
    Decimal b673 = 1;
    Decimal b674 = 1;
    Decimal b675 = 1;
    Decimal b676 = 1;
    Decimal b677 = 1;
    Decimal b678 = 1;
    Decimal b679 = 1;
    Decimal b680 = 1;
    Decimal b681 = 1;
    Decimal b682 = 1;
    Decimal b683 = 1;
    Decimal b684 = 1;
    Decimal b685 = 1;
    Decimal b686 = 1;
    Decimal b687 = 1;
    Decimal b688 = 1;
    Decimal b689 = 1;
    Decimal b690 = 1;
    Decimal b691 = 1;
    Decimal b692 = 1;
    Decimal b693 = 1;
    Decimal b694 = 1;
    Decimal b695 = 1;
    Decimal b696 = 1;
    Decimal b697 = 1;
    Decimal b698 = 1;
    Decimal b699 = 1;
    Decimal b700 = 1;
    Decimal b701 = 1;
    Decimal b702 = 1;
    Decimal b703 = 1;
    Decimal b704 = 1;
    Decimal b705 = 1;
    Decimal b706 = 1;
    Decimal b707 = 1;
    Decimal b708 = 1;
    Decimal b709 = 1;
    Decimal b710 = 1;
    Decimal b711 = 1;
    Decimal b712 = 1;
    Decimal b713 = 1;
    Decimal b714 = 1;
    Decimal b715 = 1;
    Decimal b716 = 1;
    Decimal b717 = 1;
    Decimal b718 = 1;
    Decimal b719 = 1;
    Decimal b720 = 1;
    Decimal b721 = 1;
    Decimal b722 = 1;
    Decimal b723 = 1;
    Decimal b724 = 1;
    Decimal b725 = 1;
    Decimal b726 = 1;
    Decimal b727 = 1;
    Decimal b728 = 1;
    Decimal b729 = 1;
    Decimal b730 = 1;
    Decimal b731 = 1;
    Decimal b732 = 1;
    Decimal b733 = 1;
    Decimal b734 = 1;
    Decimal b735 = 1;
    Decimal b736 = 1;
    Decimal b737 = 1;
    Decimal b738 = 1;
    Decimal b739 = 1;
    Decimal b740 = 1;
    Decimal b741 = 1;
    Decimal b742 = 1;
    Decimal b743 = 1;
    Decimal b744 = 1;
    Decimal b745 = 1;
    Decimal b746 = 1;
    Decimal b747 = 1;
    Decimal b748 = 1;
    Decimal b749 = 1;
    Decimal b750 = 1;
    Decimal b751 = 1;
    Decimal b752 = 1;
    Decimal b753 = 1;
    Decimal b754 = 1;
    Decimal b755 = 1;
    Decimal b756 = 1;
    Decimal b757 = 1;
    Decimal b758 = 1;
    Decimal b759 = 1;
    Decimal b760 = 1;
    Decimal b761 = 1;
    Decimal b762 = 1;
    Decimal b763 = 1;
    Decimal b764 = 1;
    Decimal b765 = 1;
    Decimal b766 = 1;
    Decimal b767 = 1;
    Decimal b768 = 1;
    Decimal b769 = 1;
    Decimal b770 = 1;
    Decimal b771 = 1;
    Decimal b772 = 1;
    Decimal b773 = 1;
    Decimal b774 = 1;
    Decimal b775 = 1;
    Decimal b776 = 1;
    Decimal b777 = 1;
    Decimal b778 = 1;
    Decimal b779 = 1;
    Decimal b780 = 1;
    Decimal b781 = 1;
    Decimal b782 = 1;
    Decimal b783 = 1;
    Decimal b784 = 1;
    Decimal b785 = 1;
    Decimal b786 = 1;
    Decimal b787 = 1;
    Decimal b788 = 1;
    Decimal b789 = 1;
    Decimal b790 = 1;
    Decimal b791 = 1;
    Decimal b792 = 1;
    Decimal b793 = 1;
    Decimal b794 = 1;
    Decimal b795 = 1;
    Decimal b796 = 1;
    Decimal b797 = 1;
    Decimal b798 = 1;
    Decimal b799 = 1;
    Decimal b800 = 1;
    Decimal b801 = 1;
    Decimal b802 = 1;
    Decimal b803 = 1;
    Decimal b804 = 1;
    Decimal b805 = 1;
    Decimal b806 = 1;
    Decimal b807 = 1;
    Decimal b808 = 1;
    Decimal b809 = 1;
    Decimal b810 = 1;
    Decimal b811 = 1;
    Decimal b812 = 1;
    Decimal b813 = 1;
    Decimal b814 = 1;
    Decimal b815 = 1;
    Decimal b816 = 1;
    Decimal b817 = 1;
    Decimal b818 = 1;
    Decimal b819 = 1;
    Decimal b820 = 1;
    Decimal b821 = 1;
    Decimal b822 = 1;
    Decimal b823 = 1;
    Decimal b824 = 1;
    Decimal b825 = 1;
    Decimal b826 = 1;
    Decimal b827 = 1;
    Decimal b828 = 1;
    Decimal b829 = 1;
    Decimal b830 = 1;
    Decimal b831 = 1;
    Decimal b832 = 1;
    Decimal b833 = 1;
    Decimal b834 = 1;
    Decimal b835 = 1;
    Decimal b836 = 1;
    Decimal b837 = 1;
    Decimal b838 = 1;
    Decimal b839 = 1;
    Decimal b840 = 1;
    Decimal b841 = 1;
    Decimal b842 = 1;
    Decimal b843 = 1;
    Decimal b844 = 1;
    Decimal b845 = 1;
    Decimal b846 = 1;
    Decimal b847 = 1;
    Decimal b848 = 1;
    Decimal b849 = 1;
    Decimal b850 = 1;
    Decimal b851 = 1;
    Decimal b852 = 1;
    Decimal b853 = 1;
    Decimal b854 = 1;
    Decimal b855 = 1;
    Decimal b856 = 1;
    Decimal b857 = 1;
    Decimal b858 = 1;
    Decimal b859 = 1;
    Decimal b860 = 1;
    Decimal b861 = 1;
    Decimal b862 = 1;
    Decimal b863 = 1;
    Decimal b864 = 1;
    Decimal b865 = 1;
    Decimal b866 = 1;
    Decimal b867 = 1;
    Decimal b868 = 1;
    Decimal b869 = 1;
    Decimal b870 = 1;
    Decimal b871 = 1;
    Decimal b872 = 1;
    Decimal b873 = 1;
    Decimal b874 = 1;
    Decimal b875 = 1;
    Decimal b876 = 1;
    Decimal b877 = 1;
    Decimal b878 = 1;
    Decimal b879 = 1;
    Decimal b880 = 1;
    Decimal b881 = 1;
    Decimal b882 = 1;
    Decimal b883 = 1;
    Decimal b884 = 1;
    Decimal b885 = 1;
    Decimal b886 = 1;
    Decimal b887 = 1;
    Decimal b888 = 1;
    Decimal b889 = 1;
    Decimal b890 = 1;
    Decimal b891 = 1;
    Decimal b892 = 1;
    Decimal b893 = 1;
    Decimal b894 = 1;
    Decimal b895 = 1;
    Decimal b896 = 1;
    Decimal b897 = 1;
    Decimal b898 = 1;
    Decimal b899 = 1;
    Decimal b900 = 1;
    Decimal b901 = 1;
    Decimal b902 = 1;
    Decimal b903 = 1;
    Decimal b904 = 1;
    Decimal b905 = 1;
    Decimal b906 = 1;
    Decimal b907 = 1;
    Decimal b908 = 1;
    Decimal b909 = 1;
    Decimal b910 = 1;
    Decimal b911 = 1;
    Decimal b912 = 1;
    Decimal b913 = 1;
    Decimal b914 = 1;
    Decimal b915 = 1;
    Decimal b916 = 1;
    Decimal b917 = 1;
    Decimal b918 = 1;
    Decimal b919 = 1;
    Decimal b920 = 1;
    Decimal b921 = 1;
    Decimal b922 = 1;
    Decimal b923 = 1;
    Decimal b924 = 1;
    Decimal b925 = 1;
    Decimal b926 = 1;
    Decimal b927 = 1;
    Decimal b928 = 1;
    Decimal b929 = 1;
    Decimal b930 = 1;
    Decimal b931 = 1;
    Decimal b932 = 1;
    Decimal b933 = 1;
    Decimal b934 = 1;
    Decimal b935 = 1;
    Decimal b936 = 1;
    Decimal b937 = 1;
    Decimal b938 = 1;
    Decimal b939 = 1;
    Decimal b940 = 1;
    Decimal b941 = 1;
    Decimal b942 = 1;
    Decimal b943 = 1;
    Decimal b944 = 1;
    Decimal b945 = 1;
    Decimal b946 = 1;
    Decimal b947 = 1;
    Decimal b948 = 1;
    Decimal b949 = 1;
    Decimal b950 = 1;
    Decimal b951 = 1;
    Decimal b952 = 1;
    Decimal b953 = 1;
    Decimal b954 = 1;
    Decimal b955 = 1;
    Decimal b956 = 1;
    Decimal b957 = 1;
    Decimal b958 = 1;
    Decimal b959 = 1;
    Decimal b960 = 1;
    Decimal b961 = 1;
    Decimal b962 = 1;
    Decimal b963 = 1;
    Decimal b964 = 1;
    Decimal b965 = 1;
    Decimal b966 = 1;
    Decimal b967 = 1;
    Decimal b968 = 1;
    Decimal b969 = 1;
    Decimal b970 = 1;
    Decimal b971 = 1;
    Decimal b972 = 1;
    Decimal b973 = 1;
    Decimal b974 = 1;
    Decimal b975 = 1;
    Decimal b976 = 1;
    Decimal b977 = 1;
    Decimal b978 = 1;
    Decimal b979 = 1;
    Decimal b980 = 1;
    Decimal b981 = 1;
    Decimal b982 = 1;
    Decimal b983 = 1;
    Decimal b984 = 1;
    Decimal b985 = 1;
    Decimal b986 = 1;
    Decimal b987 = 1;
    Decimal b988 = 1;
    Decimal b989 = 1;
    Decimal b990 = 1;
    Decimal b991 = 1;
    Decimal b992 = 1;
    Decimal b993 = 1;
    Decimal b994 = 1;
    Decimal b995 = 1;
    Decimal b996 = 1;
    Decimal b997 = 1;
    Decimal b998 = 1;
    Decimal b999 = 1;
    Decimal b1000 = 1;

    






















    public BatchPaymentDataConversion() {
        if(Test.isRunningTest()){
            query = 'Select Id, CloseDate, Sub_Stage__c, Sale_Invoice_Qty_Payments_After_Down__c, Amount, accountID,' +
            'Sale_Down_Payment_1_of_4__c,Sale_Down_Payment_1_of_4_Date__c,Sale_Invoice_Amount_Due_Per__c,' +
            'Sale_Down_Payment_2_of_4__c,Sale_Down_Payment_2_of_4_Date__c,Sale_Down_Payment_3_of_4__c,' +
            'Sale_Down_Payment_3_of_4_Date__c,Sale_Down_Payment_4_of_4__c,Sale_Down_Payment_4_of_4_Date__c, ' +
            'Summary_of_List_Prices__c,Summary_of_Receivables__c ' +
            'from Opportunity where Id = \'0067A000002C9nZQAS\' '+
            ' OR Id = \'0067A000002C9oi\' ' +
            ' OR Id = \'0066000001ku7hh\' ' +
            ' OR Id = \'00660000018uEZQ\' ' +
            ' OR Id = \'0066000001jJiyc\' ';
        } else {
            /*
            query = 'Select Id, CloseDate, Sub_Stage__c, Sale_Invoice_Qty_Payments_After_Down__c, Amount, accountID,' +
            'Sale_Down_Payment_1_of_4__c,Sale_Down_Payment_1_of_4_Date__c,Sale_Invoice_Amount_Due_Per__c,' +
            'Sale_Down_Payment_2_of_4__c,Sale_Down_Payment_2_of_4_Date__c,Sale_Down_Payment_3_of_4__c,' +
            'Summary_of_List_Prices__c,Summary_of_Receivables__c, ' +
            'Sale_Down_Payment_3_of_4_Date__c,Sale_Down_Payment_4_of_4__c,Sale_Down_Payment_4_of_4_Date__c ' +
            'from Opportunity where Id = \'0067A000002C9nZQAS\' '+
            ' OR Id = \'0067A000002C9oi\' ' +
            ' OR Id = \'0066000001ktoOs\' ' +
            ' OR Id = \'0066000001iMc0N\' ' +
            ' OR Id = \'0066000001k7Nl7\' ' +
            ' OR Id = \'0066000001ktvp4\' ' +
            ' OR Id = \'0066000001kthk9\' ' +
            ' OR Id = \'0066000001iwd5i\' ' +
            ' OR Id = \'0066000001jM2xS\' ' +
            ' OR Id = \'0066000001bGwN5\' ' +
            ' OR Id = \'0066000000NvRC3\' ' +
            ' OR Id = \'0066000001W8PCL\' ' +
            ' OR Id = \'0066000001lWspl\' ' +
            ' OR Id = \'0066000001kuqW5\' ' +
            ' OR Id = \'0066000001ksaI1\' ' +
            ' OR Id = \'0066000001iwali\' ' +
            ' OR Id = \'0066000001jJI81\' ' +
            ' OR Id = \'0066000001Mcrrh\' ' +
            ' OR Id = \'0066000001jLkFz\' ' +
            ' OR Id = \'0066000001ku7hh\' ' +
            ' OR Id = \'00660000018uEZQ\' ' +
            ' OR Id = \'0066000001jJiyc\' ';
            */
            
            query = 'Select Id, CloseDate, Sub_Stage__c, Sale_Invoice_Qty_Payments_After_Down__c, Amount, accountID,' +
            'Sale_Down_Payment_1_of_4__c,Sale_Down_Payment_1_of_4_Date__c,Sale_Invoice_Amount_Due_Per__c,' +
            'Sale_Down_Payment_2_of_4__c,Sale_Down_Payment_2_of_4_Date__c,Sale_Down_Payment_3_of_4__c,' +
            'Summary_of_List_Prices__c,Summary_of_Receivables__c, ' +
            'Sale_Down_Payment_3_of_4_Date__c,Sale_Down_Payment_4_of_4__c,Sale_Down_Payment_4_of_4_Date__c ' +
            'from Opportunity where CC_Data_Load__c = true and CC_Data_Load_Complete__c = false';
        }
        
        
        // CC_Data_Load_v2__c 
        // CC_Data_Load__c 
    
    //  query = 'Select Id, CloseDate, Sub_Stage__c, Sale_Invoice_Qty_Payments_After_Down__c, Amount, accountID,' +
    //  'Sale_Down_Payment_1_of_4__c,Sale_Down_Payment_1_of_4_Date__c,Sale_Invoice_Amount_Due_Per__c,' +
    //  'Sale_Down_Payment_2_of_4__c,Sale_Down_Payment_2_of_4_Date__c,Sale_Down_Payment_3_of_4__c,' +
    //  'Sale_Down_Payment_3_of_4_Date__c,Sale_Down_Payment_4_of_4__c,Sale_Down_Payment_4_of_4_Date__c ' +
    //  'from Opportunity where Id = \'0066000001ktoOs\' ';
    
    //   query = 'Select Id, CloseDate, Sub_Stage__c, Sale_Invoice_Qty_Payments_After_Down__c, Amount, accountId' +
    //  'Sale_Down_Payment_1_of_4__c,Sale_Down_Payment_1_of_4_Date__c,Sale_Invoice_Amount_Due_Per__c,' +
    //  'Sale_Down_Payment_2_of_4__c,Sale_Down_Payment_2_of_4_Date__c,Sale_Down_Payment_3_of_4__c,' +
    //  'Sale_Down_Payment_3_of_4_Date__c,Sale_Down_Payment_4_of_4__c,Sale_Down_Payment_4_of_4_Date__c ' +
    //  'from Opportunity where Id = \'0066000001ktoOs\' '; 
       
       // TODO: Update query to filter out closed won opps after the date 
        // TODO: Remove the where id = hardcode thats in place for testing purposes 
        System.debug('debuggy: ' + query);
    }

    public Database.QueryLocator start(Database.BatchableContext BC) {
        return Database.getQueryLocator(query);
    }

    public void execute(Database.BatchableContext BC, List<sObject> scope) {
        System.debug('hello there: execute started');
Handler_Opportunity.BYPASS = true;
PiggybackRefactor.BYPASS = true;
OppChangeOwnerHistoryHelper.BYPASS = true;

        String scheduled = 'Scheduled';
        String standard = 'Standard - for regular sales';

        List<Opportunity> opps = (List<Opportunity>)scope;

        Set<Id> records = new Set<Id>(); 
        
        for(Opportunity o : opps){
            records.add(o.Id);
        }
        System.debug('hello');

        List<OpportunityLineItemSchedule> schedule = [ 
            SELECT Id, OpportunityLineItemId, OpportunityLineItem.opportunityid, Type, Revenue, 
            Quantity, Description, ScheduleDate, CurrencyIsoCode, CreatedById, CreatedDate, 
            LastModifiedById, LastModifiedDate, SystemModstamp, IsDeleted 
            FROM OpportunityLineItemSchedule 
            WHERE OpportunityLineItem.OpportunityId
            IN :records
        ];
        
        //query payment terms, so we can skip opps with payment terms so we dont create dups
        List<Payment_terms__c> existingTerms = [SELECT opportunity__c 
            from payment_terms__c
            where opportunity__c IN :records];

        Payment_Terms__c terms = new Payment_Terms__c(  );//opp
        Payment_Terms__c termsInactive = new Payment_Terms__c(  );//opp
        Planned_Payment__c plans = new Planned_Payment__c();//opp
        Planned_Payment__c plansInactive = new Planned_Payment__c();//opp
        Payment_Activity__c active = new Payment_Activity__c();//schedule
        Payment__c payment = new Payment__c();//schedule
        Boolean hasTerms = false;
        List<Payment__c> insertPayment = new List<Payment__c>();
        for(Opportunity tmp : opps){
            tmp.CC_Data_Load_Complete__c = true;
            hasTerms = false;
            for(payment_terms__c pt:existingTerms){
                if(tmp.id == pt.opportunity__c){
                    hasTerms = true;
                }
            }
            
        terms = new Payment_Terms__c(  );
        termsInactive = new Payment_Terms__c(  );
            /*Date d = tmp.Sale_Down_Payment_1_of_4_Date__c;
            Date datePlusThirty = d.addDays(30);*/
            
            if ( tmp.Sale_Invoice_Qty_Payments_After_Down__c == 1 && !hasTerms ){
                //new
                terms.Opportunity__c = tmp.Id ;
                terms.account__c = tmp.accountID;
                //terms.Sales_Price__c = tmp.Amount;
                
                terms.Discount__c = tmp.Summary_of_List_Prices__c - tmp.Summary_of_Receivables__c;
                terms.Sales_Price__c = tmp.Summary_of_List_Prices__c - terms.Discount__c;
                terms.Active__c = true;
                terms.Payment_Terms_Type__c = tmp.Sub_Stage__c;
                insert terms;
                //endnew
            
                for( OpportunityLineItemSchedule s : schedule ){
                    if(s.OpportunityLineItem.opportunityid == tmp.Id ){
plans = new Planned_Payment__c();//opp
active = new Payment_Activity__c();//schedule
payment = new Payment__c();//schedule
                        Boolean badDebt = s.Description == 'Bad Debt' || s.Description == 'Scheduled Bad Debt'; System.debug( 'Hello there: Boolean badDebt is: ' + badDebt );
                        Boolean canceled = s.Description == 'c' || s.Description == 'canceled' || s.Description == 'Cancelled' || s.Description == 'canc' || s.Description == 'elled' || s.Description == 'Refund' || s.Description == 'Return' || s.Description == 'chgbk' || s.Description == 'Returned'; System.debug( 'Hello there: Boolean badDebt is: ' + canceled);
                        Boolean paidEarly = s.Description == 'EPO' || s.Description == 'Paid Early'; System.debug( 'Hello there: Boolean badDebt is: ' + paidEarly);
                        Boolean ugp = s.Description == 'UGP'; System.debug( 'Hello there: Boolean badDebt is: ' + ugp);
                        Boolean credit = s.Description == 'Credit' || s.Description == 'discount'; System.debug( 'Hello there: Boolean badDebt is: ' + ugp);

                        Boolean collections = s.Description == 'Default'|| s.Description == 'collections'|| s.Description == 'UGD'|| s.Description == 'Defaut'|| s.Description == 'Decline'; System.debug( 'Hello there: Boolean collections is: ' + collections);

                        if(s.Description == 'Paid'){
                            /*
                                terms.Opportunity__c = tmp.Id ;
                                terms.Sales_Price__c = tmp.Amount;
                                terms.Active__c = true;
                                terms.Payment_Terms_Type__c = tmp.Sub_Stage__c;
                                insert terms;
                            */
                                plans.Status__c = s.Description;
                                plans.Amount_Due__c = s.Revenue;
                                //plans.PP_Paid__c = s.Revenue;
                                plans.Due_Date__c = s.ScheduleDate;
                                //plans.PP_Paid_Date__c = s.ScheduleDate;
                                plans.PP_Type__c = '';
                                plans.PP_Description__c = standard;
                                plans.Payment_Terms__c = terms.Id;
                                insert plans;
                            
                                active.Payment_Status__c = 'Paid';
                                active.Outcome__c = 'Approved';
                                active.Payment_Type__c = 'Credit Card';
                                Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                                //active.Date__c = s.ScheduleDate;
                                active.Date__c = newDate;
                                active.Amount__c = s.Revenue;
                                active.Payment_Terms__c = terms.Id;
                                active.Planned_Payment__c = plans.Id;
                                active.opportunity__c = tmp.id;
                                active.account__c = tmp.accountId;
                                insert active;

                                payment.PY_Paid_Date__c = s.ScheduleDate;
                                payment.Amount__c = s.Revenue;
                                payment.Payment_Activity__c = active.Id; 
                                payment.Planned_Payment__c = plans.Id; 
                                //insert payment;
                                insertPayment.add(payment);
                            
                        } else if ( s.Description == 'Scheduled' ){

                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            //terms.Payment_Terms_Type__c = blank;
                            //insert terms;
system.debug('plans here' + plans);
                            plans.Status__c = scheduled;
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.PP_Description__c = standard;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Type__c = '';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;

                            /*active.Payment_Status__c = 'Paid';
                            active.Outcome__c = 'Approved';
                            active.Payment_Type__c = 'Credit Card';
                            active.Date__c = s.ScheduleDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            insert active;*/
                            
                            /*payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            insert payment;*/

                            System.debug('hello there - schedule ended');

                        } else if ( badDebt ){
                            
                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'Collections';
                            //insert terms;
                            
                            if(s.Description == 'Scheduled Bad Debt'){
                                plans.Status__c = 'Scheduled';
                                plans.PP_Description__c = 'Collections';
                            } else {
                                plans.Status__c = 'Credit';
                                plans.PP_Description__c = 'Bad Debt';
                            }
                            
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            
                            plans.PP_Type__c = '';

                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                        
                            active.Payment_Status__c = 'Credit';
                            active.Outcome__c = 'None';
                            active.Payment_Type__c = 'None';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                            active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - bad debt ended');

                        } else if ( canceled ){
                            
                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'Cancelled';
                            //insert terms;
                            
                            plans.Status__c = 'Credit';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'Cancelled';
                            plans.PP_Type__c = '';

                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                        
                            active.Payment_Status__c = 'Credit';
                            active.Outcome__c = 'None';
                            active.Payment_Type__c = 'None';
                            active.Date__c = s.ScheduleDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                                active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - canceled ended');

                        } else if ( paidEarly ){                        
                        
                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'EPO';
                            //insert terms;
                            
                            plans.Status__c = 'Paid';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'EPO';
                            plans.PP_Type__c = '';

                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                        
                            active.Payment_Status__c = 'Paid';
                            active.Outcome__c = 'Approved';
                            active.Payment_Type__c = 'Credit Card';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                                active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                                insertPayment.add(payment);

                            System.debug('hello there - paidEarly ended');

                        } else if ( ugp ){                      
                        
                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'EPO';
                            //insert terms;
                            
                            plans.Status__c = 'Paid';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'EPO';
                            plans.PP_Type__c = '';

                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                        
                            active.Payment_Status__c = 'Paid';
                            active.Outcome__c = 'Approved';
                            active.Payment_Type__c = 'Credit Card';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                                active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - canceled ended');

                        } else if ( ugp ){  

                            terms.Opportunity__c = tmp.Id ;
                            terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'Opp Sub-Stage';
                            //insert terms;

                            plans.Status__c = 'Paid';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'UGP';
                            plans.PP_Type__c = '';

                            plans.Payment_Terms__c = terms.Id;
                            insert plans;

                            active.Payment_Status__c = 'Paid';
                            active.Outcome__c = 'Approved';
                            active.Payment_Type__c = 'None';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                                active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - upg ended');

                        } else if ( collections ){  
                            
                            terms.Opportunity__c = tmp.Id ;
                            terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'Collections';
                            //insert terms;
//PA Status = Blank
//PA Outcome  = Declined
//PP Status = Overdue
//PP Description = Default
//PP Type = Blank
//PP Paid = 0.00
//PP Remaining Balance = PP Amount Due

                            //plans.Status__c = 'Credit';
                            plans.Status__c = 'Overdue';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'Default';
                            plans.PP_Type__c = '';

                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                            
                            //active.Payment_Status__c = 'Paid';
                            active.Payment_Status__c = '';
                            active.Outcome__c = 'Declined';
                            //active.Payment_Type__c = 'None';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                                active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                           // insertPayment.add(payment);

                            System.debug('hello there - collections ended');

                        } else if ( credit ){

                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'NON';
                            //insert terms;

                            plans.Status__c = 'Credit';
                            plans.Due_Date__c = s.ScheduleDate;
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.PP_Description__c = 'None';
                            //not writable: plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Type__c = '';

                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                            
                            active.Payment_Status__c = 'Credit';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Outcome__c = 'None';
                            active.Payment_Type__c = 'None';
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                                active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - credit ended');

                        } else {

                            System.debug('hello there - Error: tmp.Sale_Invoice_Qty_Payments_After_Down__c should = 1 ['+tmp.Sale_Invoice_Qty_Payments_After_Down__c+'] AND s.Description equals ' + s.Description );
                        }
                    }
                }
            } else if ( tmp.Sale_Invoice_Qty_Payments_After_Down__c > 1  && !hasTerms) {

                termsInactive.Opportunity__c = tmp.Id ;
                //termsInactive.Sales_Price__c = tmp.Amount;
                //termsInactive.Sales_Price__c = tmp.Summary_of_List_Prices__c;
                termsInactive.Discount__c = tmp.Summary_of_List_Prices__c - tmp.Summary_of_Receivables__c;
                termsInactive.Sales_Price__c = tmp.Summary_of_List_Prices__c - termsInactive.Discount__c;
                termsInactive.Active__c = false;
                termsInactive.Payment_Terms_Type__c = tmp.Sub_Stage__c;
                termsInactive.First_Payment_Term__c = true;
                termsInactive.account__c = tmp.accountId;
                //insert termsInactive;
                
                terms.Opportunity__c = tmp.Id ;
                //terms.Sales_Price__c = tmp.Summary_of_List_Prices__c;
                terms.Discount__c = tmp.Summary_of_List_Prices__c - tmp.Summary_of_Receivables__c;
                
                terms.Sales_Price__c = tmp.Summary_of_List_Prices__c - terms.discount__c;
                terms.Active__c = true;
                terms.Payment_Terms_Type__c = tmp.Sub_Stage__c;
                terms.account__c = tmp.accountId;
                insert terms;
                
                /*
                List<Planned_Payment__c> addPlanned = new List<Planned_Payment__c>();
                //build planned payments from opportunity info.
                //build down payment
                Planned_Payment__c p1 = new Planned_Payment__c();
                if(tmp.Sale_Down_Payment_1_of_4__c > 0){
                    p1 = new Planned_Payment__c();//opp
                    p1.Status__c = 'Paid';
                    p1.Amount_Due__c = tmp.Sale_Down_Payment_1_of_4__c;
                    p1.Due_Date__c = tmp.Sale_Down_Payment_1_of_4_Date__c;
                    //plans.PP_Paid_Date__c = s.ScheduleDate;
                    p1.PP_Type__c = 'Down Payment';
                    p1.Payment_Terms__c = termsInactive.Id;
                    addPlanned.add(p1);
                }
                if(tmp.Sale_Down_Payment_2_of_4__c > 0){
                    p1 = new Planned_Payment__c();//opp
                    p1.Status__c = 'Paid';
                    p1.Amount_Due__c = tmp.Sale_Down_Payment_2_of_4__c;
                    p1.Due_Date__c = tmp.Sale_Down_Payment_2_of_4_Date__c;
                    //plans.PP_Paid_Date__c = s.ScheduleDate;
                    p1.PP_Type__c = 'Down Payment';
                    p1.Payment_Terms__c = termsInactive.Id;
                    addPlanned.add(p1);
                }
                if(tmp.Sale_Down_Payment_3_of_4__c > 0){
                    p1 = new Planned_Payment__c();//opp
                    p1.Status__c = 'Paid';
                    p1.Amount_Due__c = tmp.Sale_Down_Payment_3_of_4__c;
                    p1.Due_Date__c = tmp.Sale_Down_Payment_3_of_4_Date__c;
                    //plans.PP_Paid_Date__c = s.ScheduleDate;
                    p1.PP_Type__c = 'Down Payment';
                    p1.Payment_Terms__c = termsInactive.Id;
                    addPlanned.add(p1);
                }
                if(tmp.Sale_Down_Payment_4_of_4__c > 0){
                    p1 = new Planned_Payment__c();//opp
                    p1.Status__c = 'Paid';
                    p1.Amount_Due__c = tmp.Sale_Down_Payment_4_of_4__c;
                    p1.Due_Date__c = tmp.Sale_Down_Payment_4_of_4_Date__c;
                    //plans.PP_Paid_Date__c = s.ScheduleDate;
                    p1.PP_Type__c = 'Down Payment';
                    p1.Payment_Terms__c = termsInactive.Id;
                    addPlanned.add(p1);
                }
                
                            
                //loop qty field and create scheduled payments
                //Sale_Invoice_Amount_Due_Per__c  Sale_Invoice_Qty_Payments_After_Down__c  30 days after 1st down payment date
                Integer count = 1;
                Date newDate1;
                do {
                    newDate1 = tmp.Sale_Down_Payment_1_of_4_Date__c.addMonths(count);
                    p1 = new Planned_Payment__c();//opp
                    p1.Status__c = 'Scheduled';
                    p1.Amount_Due__c = tmp.Sale_Invoice_Amount_Due_Per__c;
                    p1.Due_Date__c = newDate1;
                    //plans.PP_Paid_Date__c = s.ScheduleDate;
                    p1.PP_Type__c = 'Recurring Payment';
                    p1.Payment_Terms__c = termsInactive.Id;
                    addPlanned.add(p1);
                    count++;
                } while (count < (tmp.Sale_Invoice_Qty_Payments_After_Down__c + 1));
                
                if(addPlanned.size() > 0){
                    insert addPlanned;
                }
                */

                
                for( OpportunityLineItemSchedule s : schedule ){
                    if(s.OpportunityLineItem.opportunityid == tmp.Id ){
plans = new Planned_Payment__c();//opp
plansInactive = new Planned_Payment__c();//opp
active = new Payment_Activity__c();//schedule
payment = new Payment__c();//schedule
                        Boolean badDebt = s.Description == 'Bad Debt' || s.Description == 'Scheduled Bad Debt'; System.debug( 'Hello there: Boolean badDebt is: ' + badDebt );
                        Boolean canceled = s.Description == 'c' || s.Description == 'canceled' || s.Description == 'Cancelled' || s.Description == 'canc' || s.Description == 'elled' || s.Description == 'Refund' || s.Description == 'Return' || s.Description == 'chgbk' || s.Description == 'Returned'; System.debug( 'Hello there: Boolean badDebt is: ' + canceled);
                        Boolean paidEarly = s.Description == 'EPO' || s.Description == 'Paid Early'; System.debug( 'Hello there: Boolean badDebt is: ' + paidEarly);
                        Boolean ugp = s.Description == 'UGP'; System.debug( 'Hello there: Boolean badDebt is: ' + ugp);
                        Boolean credit = s.Description == 'Credit' || s.Description == 'discount'; System.debug( 'Hello there: Boolean badDebt is: ' + ugp);

                        Boolean collections = s.Description == 'Default'|| s.Description == 'collections'|| s.Description == 'UGD'|| s.Description == 'Defaut'|| s.Description == 'Decline'; System.debug( 'Hello there: Boolean collections is: ' + collections);

                        if(s.Description == 'Paid'){
                            /*
                                termsInactive.Opportunity__c = tmp.Id ;
                                termsInactive.Sales_Price__c = tmp.Amount;
                                termsInactive.Active__c = false;
                                termsInactive.Payment_Terms_Type__c = tmp.Sub_Stage__c;
                                insert termsInactive;
                                
                                terms.Opportunity__c = tmp.Id ;
                                terms.Sales_Price__c = tmp.Amount;
                                terms.Active__c = true;
                                terms.Payment_Terms_Type__c = tmp.Sub_Stage__c;
                                insert terms;
                            */
                                plansInactive.Status__c = s.Description;
                                plansInactive.Amount_Due__c = s.Revenue;
                                //plans.PP_Paid__c = s.Revenue;
                                plansInactive.Due_Date__c = s.ScheduleDate;
                                //plans.PP_Paid_Date__c = s.ScheduleDate;
                                plansInactive.PP_Type__c = '';
                //                plansInactive.Payment_Terms__c = termsInactive.Id;
                //                insert plansInactive;

                                

                                plans.Status__c = s.Description;
                                plans.Amount_Due__c = s.Revenue;
                                //plans.PP_Paid__c = s.Revenue;
                                plans.Due_Date__c = s.ScheduleDate;
                                //plans.PP_Paid_Date__c = s.ScheduleDate;
                                plans.PP_Description__c = standard;
                                plans.PP_Type__c = 'Paid';
                                plans.Payment_Terms__c = terms.Id;
                                insert plans;
                            
                                active.Payment_Status__c = 'Paid';
                                active.Outcome__c = 'Approved';
                                active.Payment_Type__c = 'Credit Card';
                                Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                                active.opportunity__c = tmp.id;
                                active.account__c = tmp.accountId;
                                //PA opp, PA Account, and PA Type is blank 
                                //active.Date__c = s.ScheduleDate;
                                active.Date__c = newDate;
                                active.Amount__c = s.Revenue;
                                active.Payment_Terms__c = terms.Id;
                                active.Planned_Payment__c = plans.Id;
                                insert active;

                                payment.PY_Paid_Date__c = s.ScheduleDate;
                                payment.Amount__c = s.Revenue;
                                payment.Payment_Activity__c = active.Id; 
                                payment.Planned_Payment__c = plans.Id; 
                                //insert payment;
                                insertPayment.add(payment);
                            
                        } else if ( s.Description == 'Scheduled' ){

                            //termsInactive.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                           // termsInactive.Active__c = false;
                            //terms.Payment_Terms_Type__c = blank;
                            //insert termsInactive;

                            plansInactive.Status__c = scheduled;
                            plansInactive.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plansInactive.PP_Description__c = standard;
                            plansInactive.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plansInactive.PP_Type__c = '';
                   //         plansInactive.Payment_Terms__c = termsInactive.Id;
                //            insert plansInactive;

                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            //terms.Payment_Terms_Type__c = blank;
                            //insert terms;

                            plans.Status__c = scheduled;
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.PP_Description__c = standard;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Type__c = 'Recurring Payment';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;

                            /*active.Payment_Status__c = 'Paid';
                            active.Outcome__c = 'Approved';
                            active.Payment_Type__c = 'Credit Card';
                            active.Date__c = s.ScheduleDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            insert active;*/
                            
                            /*payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            insert payment;*/

                            System.debug('hello there - schedule ended');

                        } else if ( badDebt ){
                            
                            //termsInactive.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            //termsInactive.Active__c = false;
                            //termsInactive.Payment_Terms_Type__c = 'Collections';
                            //insert termsInactive;
                            
                            plansInactive.Status__c = 'Credit';
                            plansInactive.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plansInactive.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plansInactive.PP_Description__c = 'Bad Debt';
                            plansInactive.PP_Type__c = '';
                    //        plansInactive.Payment_Terms__c = termsInactive.Id;
                //            insert plansInactive;

                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'Collections';
                            //insert terms;
                            
                            if(s.Description == 'Scheduled Bad Debt'){
                                plans.Status__c = 'Scheduled';
                                plans.PP_Description__c = 'Collections';
                            } else {
                                plans.Status__c = 'Credit';
                                plans.PP_Description__c = 'Bad Debt';
                            }
                            
                            
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            
                            plans.PP_Type__c = '';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                        
                            active.Payment_Status__c = 'Credit';
                            active.Outcome__c = 'None';
                            active.Payment_Type__c = 'None';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                            active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - bad debt ended');

                        } else if ( canceled ){
                            

                           // termsInactive.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                          //  termsInactive.Active__c = false;
                          //  termsInactive.Payment_Terms_Type__c = 'Cancelled';
                            //insert termsInactive;
                            
                            plansInactive.Status__c = 'Credit';
                            plansInactive.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plansInactive.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plansInactive.PP_Description__c = 'Cancelled';
                            plansInactive.PP_Type__c = '';
                    //        plansInactive.Payment_Terms__c = termsInactive.Id;
                //            insert plansInactive;
                        
                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'Cancelled';
                            //insert terms;
                            
                            plans.Status__c = 'Credit';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'Cancelled';
                            plans.PP_Type__c = '';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                            active.Payment_Status__c = 'Credit';
                            active.Outcome__c = 'None';
                            active.Payment_Type__c = 'None';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                            active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - canceled ended');

                        } else if ( paidEarly ){                        
                        
                          //  termsInactive.Opportunity__c = tmp.Id ;
                            //termsInactive.Sales_Price__c = tmp.Amount;
                         //   termsInactive.Active__c = false;
                        //    termsInactive.Payment_Terms_Type__c = 'EPO';
                            //insert termsInactive;
                            
                            plansInactive.Status__c = 'Paid';
                            //plansInactive.Amount_Due__c = s.Revenue;
                            //plansInactive.PP_Paid__c = s.Revenue;
                            plansInactive.Due_Date__c = s.ScheduleDate;
                            //plansInactive.PP_Paid_Date__c = s.ScheduleDate;
                            plansInactive.PP_Description__c = 'EPO';
                            plansInactive.PP_Type__c = '';
                    //        plansInactive.Payment_Terms__c = termsInactive.Id;
                //            insert plansInactive;
                        
                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'EPO';
                            //insert terms;
                            
                            plans.Status__c = 'Paid';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'EPO';
                            plans.PP_Type__c = '';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                        
                            active.Payment_Status__c = 'Paid';
                            active.Outcome__c = 'Approved';
                            active.Payment_Type__c = 'Credit Card';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                            active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - paidEarly ended');

                        } else if ( ugp ){                      
                        
                         //   termsInactive.Opportunity__c = tmp.Id ;
                            //termsInactive.Sales_Price__c = tmp.Amount;
                        //    termsInactive.Active__c = false;
                        //    termsInactive.Payment_Terms_Type__c = 'EPO';
                            //insert termsInactive;
                            
                            plansInactive.Status__c = 'Paid';
                            //plansInactive.Amount_Due__c = s.Revenue;
                            //plansInactive.PP_Paid__c = s.Revenue;
                            plansInactive.Due_Date__c = s.ScheduleDate;
                            //plansInactive.PP_Paid_Date__c = s.ScheduleDate;
                            plansInactive.PP_Description__c = 'EPO';
                            plansInactive.PP_Type__c = '';
                     //       plansInactive.Payment_Terms__c = termsInactive.Id;
                //            insert plansInactive;
                        
                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'EPO';
                            //insert terms;
                            
                            plans.Status__c = 'Paid';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'EPO';
                            plans.PP_Type__c = '';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;

                            active.Payment_Status__c = 'Paid';
                            active.Outcome__c = 'Approved';
                            active.Payment_Type__c = 'Credit Card';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                            active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - canceled ended');

                        } else if ( ugp ){  

                       //     termsInactive.Opportunity__c = tmp.Id ;
                       //     termsInactive.Sales_Price__c = tmp.Amount;
                       //     termsInactive.Active__c = false;
                       //     termsInactive.Payment_Terms_Type__c = 'Opp Sub-Stage';
                            //insert termsInactive;

                            plansInactive.Status__c = 'Paid';
                            plansInactive.Amount_Due__c = s.Revenue;
                            //plansInactive.PP_Paid__c = s.Revenue;
                            plansInactive.Due_Date__c = s.ScheduleDate;
                            //plansInactive.PP_Paid_Date__c = s.ScheduleDate;
                            plansInactive.PP_Description__c = 'UGP';
                            plansInactive.PP_Type__c = '';
                    //        plansInactive.Payment_Terms__c = termsInactive.Id;
                //            insert plansInactive;

                            terms.Opportunity__c = tmp.Id ;
                            terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'Opp Sub-Stage';
                            //insert terms;

                            plans.Status__c = 'Paid';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'UGP';
                            plans.PP_Type__c = '';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;

                            active.Payment_Status__c = 'Paid';
                            active.Outcome__c = 'Approved';
                            active.Payment_Type__c = 'None';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                            active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - upg ended');

                        } else if ( collections ){  
                            
                    //        termsInactive.Opportunity__c = tmp.Id ;
                    //        termsInactive.Sales_Price__c = tmp.Amount;
                    ////        termsInactive.Active__c = false;
                    //        termsInactive.Payment_Terms_Type__c = 'Collections';
                            //insert termsInactive;

                            plansInactive.Status__c = 'Credit';
                            plansInactive.Amount_Due__c = s.Revenue;
                            //plansInactive.PP_Paid__c = s.Revenue;
                            plansInactive.Due_Date__c = s.ScheduleDate;
                            //plansInactive.PP_Paid_Date__c = s.ScheduleDate;
                            plansInactive.PP_Description__c = 'Default';
                            plansInactive.PP_Type__c = '';
                 //           plansInactive.Payment_Terms__c = termsInactive.Id;
                //            insert plansInactive;
                            
                            terms.Opportunity__c = tmp.Id ;
                            terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'Collections';
                            //insert terms;
//PA Status = Blank
//PA Outcome  = Declined
//PP Status = Overdue
//PP Description = Default
//PP Type = Blank
//PP Paid = 0.00
//PP Remaining Balance = PP Amount Due

                            //plans.Status__c = 'Default';
                            plans.Status__c = 'Overdue';
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.Due_Date__c = s.ScheduleDate;
                            //plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Description__c = 'Default';
                            plans.PP_Type__c = '';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                            
                            //active.Payment_Status__c = 'Credit';
                            active.Payment_Status__c = '';
                            active.Outcome__c = 'Declined';
                            //active.Payment_Type__c = 'None';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                            active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            //insertPayment.add(payment);

                            System.debug('hello there - collections ended');

                        } else if ( credit ){

                     //       termsInactive.Opportunity__c = tmp.Id ;
                            //termsInactive.Sales_Price__c = tmp.Amount;
                    //        termsInactive.Active__c = false;
                    //        termsInactive.Payment_Terms_Type__c = 'NON';
                            //insert termsInactive;

                            plansInactive.Status__c = 'Credit';
                            plansInactive.Due_Date__c = s.ScheduleDate;
                            plansInactive.Amount_Due__c = s.Revenue;
                            //plansInactive.PP_Paid__c = s.Revenue;
                            plansInactive.PP_Description__c = 'None';
                            //not writable: plansInactive.PP_Paid_Date__c = s.ScheduleDate;
                            plansInactive.PP_Type__c = '';
                 //           plansInactive.Payment_Terms__c = termsInactive.Id;
                //            insert plansInactive;
                            
                            terms.Opportunity__c = tmp.Id ;
                            //terms.Sales_Price__c = tmp.Amount;
                            terms.Active__c = true;
                            terms.Payment_Terms_Type__c = 'NON';
                            //insert terms;

                            plans.Status__c = 'Credit';
                            plans.Due_Date__c = s.ScheduleDate;
                            plans.Amount_Due__c = s.Revenue;
                            //plans.PP_Paid__c = s.Revenue;
                            plans.PP_Description__c = 'None';
                            //not writable: plans.PP_Paid_Date__c = s.ScheduleDate;
                            plans.PP_Type__c = '';
                            plans.Payment_Terms__c = terms.Id;
                            insert plans;
                            
                            active.Payment_Status__c = 'Credit';
                            Datetime newDate = Datetime.newInstance(s.ScheduleDate.Year(), s.ScheduleDate.Month(), s.ScheduleDate.Day());
                            //active.Date__c = s.ScheduleDate;
                            active.Date__c = newDate;
                            active.Amount__c = s.Revenue;
                            active.Outcome__c = 'None';
                            active.Payment_Type__c = 'None';
                            active.Payment_Terms__c = terms.Id;
                            active.Planned_Payment__c = plans.Id;
                            active.opportunity__c = tmp.id;
                            active.account__c = tmp.accountId;
                            insert active;

                            payment.PY_Paid_Date__c = s.ScheduleDate;
                            payment.Amount__c = s.Revenue;
                            payment.Payment_Activity__c = active.Id; 
                            payment.Planned_Payment__c = plans.Id; 
                            //insert payment;
                            insertPayment.add(payment);

                            System.debug('hello there - credit ended');

                        } else {

                            System.debug('hello there - Error: tmp.Sale_Invoice_Qty_Payments_After_Down__c should be > 1 ['+tmp.Sale_Invoice_Qty_Payments_After_Down__c+'] and s.Description equals ' + s.Description );
                        }
                    }
                }
            } else {
                for( OpportunityLineItemSchedule s : schedule ){
                    if(s.OpportunityLineItem.opportunityid == tmp.Id ){
                        System.debug('hello there - Error: Sale_Invoice_Qty_Payments_After_Down__c on the Opp object is ['+tmp.Sale_Invoice_Qty_Payments_After_Down__c+'] AND schedule Description equals ' + s.Description + 'AND Opportunity Id equals ' + tmp.Id );
                    }
                }
            }
            
        }if(insertPayment.size()> 0){insert insertPayment;}
        update opps;
    Handler_Opportunity.BYPASS = false;
    PiggybackRefactor.BYPASS = false;
    OppChangeOwnerHistoryHelper.BYPASS = false;

    }

    public void finish(Database.BatchableContext BC) {

    }

}